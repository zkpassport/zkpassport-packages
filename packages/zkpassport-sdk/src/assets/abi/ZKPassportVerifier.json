{
  "abi": [
    {
      "type": "constructor",
      "inputs": [{ "name": "_rootRegistry", "type": "address", "internalType": "address" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "CERTIFICATE_REGISTRY_ID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "CIRCUIT_REGISTRY_ID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "SANCTIONS_REGISTRY_ID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addVerifiers",
      "inputs": [
        { "name": "vkeyHashes", "type": "bytes32[]", "internalType": "bytes32[]" },
        { "name": "verifiers", "type": "address[]", "internalType": "address[]" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "admin",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "enforceSanctionsRoot",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBoundData",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "boundData",
          "type": "tuple",
          "internalType": "struct BoundData",
          "components": [
            { "name": "senderAddress", "type": "address", "internalType": "address" },
            { "name": "chainId", "type": "uint256", "internalType": "uint256" },
            { "name": "customData", "type": "string", "internalType": "string" }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getDisclosedData",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        },
        { "name": "isIDCard", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [
        {
          "name": "disclosedData",
          "type": "tuple",
          "internalType": "struct DisclosedData",
          "components": [
            { "name": "name", "type": "string", "internalType": "string" },
            { "name": "issuingCountry", "type": "string", "internalType": "string" },
            { "name": "nationality", "type": "string", "internalType": "string" },
            { "name": "gender", "type": "string", "internalType": "string" },
            { "name": "birthDate", "type": "string", "internalType": "string" },
            { "name": "expiryDate", "type": "string", "internalType": "string" },
            { "name": "documentNumber", "type": "string", "internalType": "string" },
            { "name": "documentType", "type": "string", "internalType": "string" }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "isAgeAbove",
      "inputs": [
        { "name": "minAge", "type": "uint8", "internalType": "uint8" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isAgeAboveOrEqual",
      "inputs": [
        { "name": "minAge", "type": "uint8", "internalType": "uint8" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isAgeBelow",
      "inputs": [
        { "name": "maxAge", "type": "uint8", "internalType": "uint8" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isAgeBelowOrEqual",
      "inputs": [
        { "name": "maxAge", "type": "uint8", "internalType": "uint8" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isAgeBetween",
      "inputs": [
        { "name": "minAge", "type": "uint8", "internalType": "uint8" },
        { "name": "maxAge", "type": "uint8", "internalType": "uint8" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isAgeEqual",
      "inputs": [
        { "name": "age", "type": "uint8", "internalType": "uint8" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isBirthdateAfter",
      "inputs": [
        { "name": "minDate", "type": "uint256", "internalType": "uint256" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isBirthdateAfterOrEqual",
      "inputs": [
        { "name": "minDate", "type": "uint256", "internalType": "uint256" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isBirthdateBefore",
      "inputs": [
        { "name": "maxDate", "type": "uint256", "internalType": "uint256" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isBirthdateBeforeOrEqual",
      "inputs": [
        { "name": "maxDate", "type": "uint256", "internalType": "uint256" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isBirthdateBetween",
      "inputs": [
        { "name": "minDate", "type": "uint256", "internalType": "uint256" },
        { "name": "maxDate", "type": "uint256", "internalType": "uint256" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isBirthdateEqual",
      "inputs": [
        { "name": "date", "type": "uint256", "internalType": "uint256" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isExpiryDateAfter",
      "inputs": [
        { "name": "minDate", "type": "uint256", "internalType": "uint256" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isExpiryDateAfterOrEqual",
      "inputs": [
        { "name": "minDate", "type": "uint256", "internalType": "uint256" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isExpiryDateBefore",
      "inputs": [
        { "name": "maxDate", "type": "uint256", "internalType": "uint256" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isExpiryDateBeforeOrEqual",
      "inputs": [
        { "name": "maxDate", "type": "uint256", "internalType": "uint256" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isExpiryDateBetween",
      "inputs": [
        { "name": "minDate", "type": "uint256", "internalType": "uint256" },
        { "name": "maxDate", "type": "uint256", "internalType": "uint256" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isExpiryDateEqual",
      "inputs": [
        { "name": "date", "type": "uint256", "internalType": "uint256" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isIssuingCountryIn",
      "inputs": [
        { "name": "countryList", "type": "string[]", "internalType": "string[]" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "isIssuingCountryOut",
      "inputs": [
        { "name": "countryList", "type": "string[]", "internalType": "string[]" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "isNationalityIn",
      "inputs": [
        { "name": "countryList", "type": "string[]", "internalType": "string[]" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "isNationalityOut",
      "inputs": [
        { "name": "countryList", "type": "string[]", "internalType": "string[]" },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "removeVerifiers",
      "inputs": [{ "name": "vkeyHashes", "type": "bytes32[]", "internalType": "bytes32[]" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "rootRegistry",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract IRootRegistry" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setPaused",
      "inputs": [{ "name": "_paused", "type": "bool", "internalType": "bool" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferAdmin",
      "inputs": [{ "name": "newAdmin", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateRootRegistry",
      "inputs": [{ "name": "_rootRegistry", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "verifyProof",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ProofVerificationParams",
          "components": [
            { "name": "vkeyHash", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes", "internalType": "bytes" },
            { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "committedInputs", "type": "bytes", "internalType": "bytes" },
            { "name": "committedInputCounts", "type": "uint256[]", "internalType": "uint256[]" },
            { "name": "validityPeriodInSeconds", "type": "uint256", "internalType": "uint256" },
            { "name": "domain", "type": "string", "internalType": "string" },
            { "name": "scope", "type": "string", "internalType": "string" },
            { "name": "devMode", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [
        { "name": "isValid", "type": "bool", "internalType": "bool" },
        { "name": "uniqueIdentifier", "type": "bytes32", "internalType": "bytes32" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "verifyScopes",
      "inputs": [
        { "name": "publicInputs", "type": "bytes32[]", "internalType": "bytes32[]" },
        { "name": "domain", "type": "string", "internalType": "string" },
        { "name": "scope", "type": "string", "internalType": "string" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "vkeyHashToVerifier",
      "inputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AdminUpdated",
      "inputs": [
        { "name": "oldAdmin", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "newAdmin", "type": "address", "indexed": true, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CertificateRegistryRootAdded",
      "inputs": [
        {
          "name": "certificateRegistryRoot",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CertificateRegistryRootRemoved",
      "inputs": [
        {
          "name": "certificateRegistryRoot",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PausedStatusChanged",
      "inputs": [{ "name": "paused", "type": "bool", "indexed": false, "internalType": "bool" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SanctionsTreesRootUpdates",
      "inputs": [
        {
          "name": "_sanctionsTreesRoot",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "VerifierAdded",
      "inputs": [
        { "name": "vkeyHash", "type": "bytes32", "indexed": true, "internalType": "bytes32" },
        { "name": "verifier", "type": "address", "indexed": true, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "VerifierRemoved",
      "inputs": [
        { "name": "vkeyHash", "type": "bytes32", "indexed": true, "internalType": "bytes32" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ZKPassportVerifierDeployed",
      "inputs": [
        { "name": "admin", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "timestamp", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561000f575f5ffd5b506040516137fc3803806137fc83398101604081905261002e916100f6565b6001600160a01b0381166100945760405162461bcd60e51b8152602060048201526024808201527f526f6f742072656769737472792063616e6e6f74206265207a65726f206164646044820152637265737360e01b606482015260840160405180910390fd5b5f8054336001600160a01b03199182168117909255600280549091166001600160a01b0384161790556040514281527ff29b53747ae7121d0958d490ad3d5cf6767119b0fdbd8389d918de3a12cf5a299060200160405180910390a250610123565b5f60208284031215610106575f5ffd5b81516001600160a01b038116811461011c575f5ffd5b9392505050565b6136cc806101305f395ff3fe608060405234801561000f575f5ffd5b5060043610610234575f3560e01c80638163f23111610135578063c4560786116100b4578063e420e35411610079578063e420e35414610520578063e718bc3214610533578063ec46f77414610546578063f851a44014610559578063f87e19b11461056b575f5ffd5b8063c4560786146104aa578063cfd9464a146104bd578063d3f6ffff146104d0578063d7bf616a146104e3578063deb7c0591461050d575f5ffd5b8063a88f1cef116100fa578063a88f1cef1461044b578063aa1346ea1461045e578063b96b161c14610471578063bf73c26c14610484578063c0940ebd14610497575f5ffd5b80638163f231146103bf578063847755e3146103ff5780638d6937b814610412578063921076c714610425578063a6df2c0114610438575f5ffd5b80634c127428116101c1578063652ba33d11610186578063652ba33d14610376578063653cfd811461037e5780636c40d5d614610391578063704876d61461039957806375829def146103ac575f5ffd5b80634c1274281461030a57806354dbe4d11461031d57806359545f45146103305780635c975abb1461035057806362067c8214610363575f5ffd5b80631e26a9dc116102075780631e26a9dc1461029b57806337889655146102bb5780633a86bd3d146102ce57806341a0e2c2146102e157806346bd0a16146102f7575f5ffd5b806304951b86146102385780630b90581b1461026057806316c38b3c1461027357806318677f2a14610288575b5f5ffd5b61024b610246366004612744565b61057e565b60405190151581526020015b60405180910390f35b61024b61026e366004612744565b6105a0565b610286610281366004612794565b6105ae565b005b6102866102963660046127c3565b610637565b6102ae6102a93660046127de565b6106e4565b604051610257919061285a565b61024b6102c9366004612960565b610847565b61024b6102dc366004612a4b565b61085c565b6102e9600181565b604051908152602001610257565b61024b610305366004612b53565b610869565b61024b610318366004612744565b610881565b61024b61032b366004612960565b61088e565b61034361033e366004612b9e565b6109df565b6040516102579190612bcf565b5f5461024b90600160a01b900460ff1681565b61024b610371366004612c05565b610b25565b6102e9600381565b61028661038c366004612b9e565b610d96565b6102e9600281565b61024b6103a7366004612744565b610e38565b6102866103ba3660046127c3565b610e45565b6103e76103cd366004612c4c565b60016020525f90815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610257565b61024b61040d366004612ce7565b610f13565b610286610420366004612d83565b6110db565b61024b610433366004612744565b61119b565b610286610446366004612dc1565b6111b4565b61024b610459366004612744565b6112de565b61024b61046c366004612960565b6112f7565b6002546103e7906001600160a01b031681565b61024b610492366004612960565b611448565b61024b6104a5366004612960565b6114af565b61024b6104b8366004612b53565b6114bb565b61024b6104cb366004612744565b6114c9565b61024b6104de366004612744565b6114d7565b6104f66104f1366004612b9e565b6114f0565b604080519215158352602083019190915201610257565b61024b61051b366004612744565b611997565b61024b61052e366004612a4b565b6119a4565b61024b610541366004612744565b6119b1565b61024b610554366004612a4b565b6119be565b5f546103e7906001600160a01b031681565b61024b610579366004612a4b565b6119cb565b5f61059761058f8462015180612e3f565b6002846119d8565b90505b92915050565b5f6105978384600285611c33565b5f546001600160a01b031633146105e05760405162461bcd60e51b81526004016105d790612e52565b60405180910390fd5b5f8054821515600160a01b0260ff60a01b199091161790556040517f9a506b30e47f3823b09f67e4c0dfa5c3d8023b71825b7ceaa97677129128c9c59061062c90831515815260200190565b60405180910390a150565b5f546001600160a01b031633146106605760405162461bcd60e51b81526004016105d790612e52565b6001600160a01b0381166106c25760405162461bcd60e51b8152602060048201526024808201527f526f6f742072656769737472792063616e6e6f74206265207a65726f206164646044820152637265737360e01b60648201526084016105d7565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61072c60405180610100016040528060608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b5f73__$144f4fe859debe4776cdef2b99f7b97a42$__63ddf3eec96107546060870187612e89565b6107616080890189612ecb565b6040518563ffffffff1660e01b81526004016107809493929190612f68565b5f60405180830381865af415801561079a573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526107c19190810190612fdd565b6040516301e9bf5760e11b815290925073__$144f4fe859debe4776cdef2b99f7b97a42$__91506303d37eae906107fe9084908790600401613036565b5f60405180830381865af4158015610818573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261083f9190810190613059565b949350505050565b5f6105976108568460016131ea565b8361088e565b5f61059783600784611f71565b5f6108778484600385611c33565b90505b9392505050565b5f610597836003846119d8565b5f80808073__$144f4fe859debe4776cdef2b99f7b97a42$__63b2b37a4c6108b96060880188612e89565b6108c660808a018a612ecb565b6040518563ffffffff1660e01b81526004016108e59493929190612f68565b606060405180830381865af4158015610900573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109249190613203565b925092509250610938838660a0013561209b565b6109545760405162461bcd60e51b81526004016105d790613244565b60ff8116156109cd576040805162461bcd60e51b81526020600482015260248101919091527f5468652070726f6f6620757070657220626f756e64206d75737420626520302c60448201527f20706c65617365207573652069734167654265747765656e20696e737465616460648201526084016105d7565b5060ff85811691161491505092915050565b60408051606080820183525f8083526020830152918101919091525f73__$144f4fe859debe4776cdef2b99f7b97a42$__634601173c610a226060860186612e89565b610a2f6080880188612ecb565b6040518563ffffffff1660e01b8152600401610a4e9493929190612f68565b5f60405180830381865af4158015610a68573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610a8f91908101906132b5565b604051630578c5d360e11b815290915073__$144f4fe859debe4776cdef2b99f7b97a42$__90630af18ba690610ac99084906004016132e6565b5f60405180830381865af4158015610ae3573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610b0a91908101906132f8565b604085015260208401526001600160a01b0316825250919050565b5f80808073__$144f4fe859debe4776cdef2b99f7b97a42$__63b2b37a4c610b506060880188612e89565b610b5d60808a018a612ecb565b6040518563ffffffff1660e01b8152600401610b7c9493929190612f68565b606060405180830381865af4158015610b97573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bbb9190613203565b925092509250610bcf838660a0013561209b565b610beb5760405162461bcd60e51b81526004016105d790613244565b8560ff168760ff161115610c575760405162461bcd60e51b815260206004820152602d60248201527f4d696e20616765206d757374206265206c657373207468616e206f722065717560448201526c616c20746f206d61782061676560981b60648201526084016105d7565b8160ff165f03610ce45760405162461bcd60e51b815260206004820152604c60248201527f5468652070726f6f66206c6f77657220626f756e64206d757374206265206e6f60448201527f6e2d7a65726f2c20706c656173652075736520697341676542656c6f774f724560648201526b1c5d585b081a5b9cdd19585960a21b608482015260a4016105d7565b8060ff165f03610d715760405162461bcd60e51b815260206004820152604c60248201527f5468652070726f6f6620757070657220626f756e64206d757374206265206e6f60448201527f6e2d7a65726f2c20706c656173652075736520697341676541626f76654f724560648201526b1c5d585b081a5b9cdd19585960a21b608482015260a4016105d7565b8160ff168760ff16148015610d8b57508060ff168660ff16145b979650505050505050565b5f73__$144f4fe859debe4776cdef2b99f7b97a42$__63fbd24457610dbe6060850185612e89565b610dcb6080870187612ecb565b6040518563ffffffff1660e01b8152600401610dea9493929190612f68565b602060405180830381865af4158015610e05573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e299190613343565b9050610e34816120c8565b5050565b5f610597836002846119d8565b5f546001600160a01b03163314610e6e5760405162461bcd60e51b81526004016105d790612e52565b6001600160a01b038116610ec45760405162461bcd60e51b815260206004820152601c60248201527f41646d696e2063616e6e6f74206265207a65726f20616464726573730000000060448201526064016105d7565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f101b8081ff3b56bbf45deb824d86a3b0fd38b7e3dd42421105cf8abe9106db0b9190a35050565b5f5f610f5386868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061218992505050565b610fcd57600860028787604051602001610f6e92919061335a565b60408051601f1981840301815290829052610f8891613369565b602060405180830381855afa158015610fa3573d5f5f3e3d5ffd5b5050506040513d601f19601f82011682018060405250810190610fc69190613343565b901c610fcf565b5f5b90505f61101085858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061218992505050565b61108a5760086002868660405160200161102b92919061335a565b60408051601f198184030181529082905261104591613369565b602060405180830381855afa158015611060573d5f5f3e3d5ffd5b5050506040513d601f19601f820116820180604052508101906110839190613343565b901c61108c565b5f5b905081898960038181106110a2576110a261337f565b905060200201351480156110ce575080898960048181106110c5576110c561337f565b90506020020135145b9998505050505050505050565b5f546001600160a01b031633146111045760405162461bcd60e51b81526004016105d790612e52565b5f5b818110156111965760015f8484848181106111235761112361337f565b602090810292909201358352508101919091526040015f2080546001600160a01b031916905582828281811061115b5761115b61337f565b905060200201357f6fdcbcf8f91bc23f2c9dcfe8fe01d80d1b1afbbf207298e94c0171ccc587424c60405160405180910390a2600101611106565b505050565b5f6105976111ac6201518085613393565b60028461218e565b5f546001600160a01b031633146111dd5760405162461bcd60e51b81526004016105d790612e52565b5f5b838110156112d7578282828181106111f9576111f961337f565b905060200201602081019061120e91906127c3565b60015f8787858181106112235761122361337f565b9050602002013581526020019081526020015f205f6101000a8154816001600160a01b0302191690836001600160a01b0316021790555082828281811061126c5761126c61337f565b905060200201602081019061128191906127c3565b6001600160a01b031685858381811061129c5761129c61337f565b905060200201357f636107338a3eb46f1f60562462f3ec11393d35fbc965991aaade3b9e7d89c3f560405160405180910390a36001016111df565b5050505050565b5f6105976112ef6201518085613393565b60038461218e565b5f80808073__$144f4fe859debe4776cdef2b99f7b97a42$__63b2b37a4c6113226060880188612e89565b61132f60808a018a612ecb565b6040518563ffffffff1660e01b815260040161134e9493929190612f68565b606060405180830381865af4158015611369573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061138d9190613203565b9250925092506113a1838660a0013561209b565b6113bd5760405162461bcd60e51b81526004016105d790613244565b60ff821615611436576040805162461bcd60e51b81526020600482015260248101919091527f5468652070726f6f66206c6f77657220626f756e64206d75737420626520302c60448201527f20706c65617365207573652069734167654265747765656e20696e737465616460648201526084016105d7565b60ff8681169116149250505092915050565b5f5f8360ff161161149b5760405162461bcd60e51b815260206004820152601e60248201527f4d617820616765206d7573742062652067726561746572207468616e2030000060448201526064016105d7565b6105976114a96001856133a6565b836112f7565b5f610597838484610b25565b5f6108778484600285611c33565b5f6105978384600385611c33565b5f6105976114e88462015180612e3f565b6003846119d8565b5f80548190600160a01b900460ff16156115415760405162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b60448201526064016105d7565b5f61154c8435612392565b905061157a61155e6040860186612ecb565b5f81811061156e5761156e61337f565b905060200201356123eb565b6115a761158a6040860186612ecb565b600181811061159b5761159b61337f565b905060200201356124b3565b6115f16115b76040860186612ecb565b808060200260200160405190810160405280939291908181526020018383602002808284375f9201919091525050505060a0860135612571565b6116595760405162461bcd60e51b815260206004820152603360248201527f5468652070726f6f66207761732067656e657261746564206f757473696465206044820152721d1a19481d985b1a591a5d1e481c195c9a5bd9606a1b60648201526084016105d7565b6116836116696040860186612ecb565b61167660c0880188612e89565b61040d60e08a018a612e89565b6116cf5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420646f6d61696e206f722073636f706500000000000000000060448201526064016105d7565b61178a6116df6040860186612ecb565b60059060016116f160408a018a612ecb565b6116fc929150613393565b92611709939291906133bf565b808060200260200160405190810160405280939291908181526020018383602002808284375f92019190915250611747925050506060870187612e89565b6117546080890189612ecb565b808060200260200160405190810160405280939291908181526020018383602002808284375f9201919091525061259c92505050565b60016117996040860186612ecb565b60016117a86040890189612ecb565b6117b3929150613393565b8181106117c2576117c261337f565b905060200201351415806117e357506117e361012085016101008601612794565b6118405760405162461bcd60e51b815260206004820152602860248201527f4d6f636b2070726f6f667320617265206f6e6c7920616c6c6f77656420696e20604482015267646576206d6f646560c01b60648201526084016105d7565b600661184f6040860186612ecb565b61185a929150613393565b6118676080860186612ecb565b9050146118c45760405162461bcd60e51b815260206004820152602560248201527f496e76616c696420636f6d6d697474656420696e70757420636f756e7473206c6044820152640cadccee8d60db1b60648201526084016105d7565b6001600160a01b03811663ea50d0e46118e06020870187612e89565b6118ed6040890189612ecb565b6040518563ffffffff1660e01b815260040161190c9493929190612f68565b602060405180830381865afa158015611927573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061194b91906133ea565b92505f600161195d6040870187612ecb565b611968929150613393565b90506119776040860186612ecb565b828181106119875761198761337f565b9050602002013592505050915091565b5f6105978360028461218e565b5f61059783600584611f71565b5f6105978360038461218e565b5f61059783600684611f71565b5f61059783600484611f71565b5f80808073__$144f4fe859debe4776cdef2b99f7b97a42$__638a8b3f92611a036060880188612e89565b611a1060808a018a612ecb565b8b6040518663ffffffff1660e01b8152600401611a31959493929190613419565b606060405180830381865af4158015611a4c573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a70919061346e565b925092509250611a84838660a0013561209b565b611aa05760405162461bcd60e51b81526004016105d790613244565b6002866009811115611ab457611ab4613405565b1480611ad157506003866009811115611acf57611acf613405565b145b611aed5760405162461bcd60e51b81526004016105d790613499565b6002866009811115611b0157611b01613405565b03611ba3578015611b895760405162461bcd60e51b815260206004820152604660248201527f5468652070726f6f6620757070657220626f756e64206d75737420626520302c60448201527f20706c65617365207573652069734269727468646174654265747765656e20696064820152651b9cdd19585960d21b608482015260a4016105d7565b611b976383aa7e8083613393565b8714935050505061087a565b8015611c275760405162461bcd60e51b815260206004820152604760248201527f5468652070726f6f6620757070657220626f756e64206d75737420626520302c60448201527f20706c6561736520757365206973457870697279446174654265747765656e206064820152661a5b9cdd19585960ca1b608482015260a4016105d7565b508514915061087a9050565b5f80808073__$144f4fe859debe4776cdef2b99f7b97a42$__638a8b3f92611c5e6060880188612e89565b611c6b60808a018a612ecb565b8b6040518663ffffffff1660e01b8152600401611c8c959493929190613419565b606060405180830381865af4158015611ca7573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ccb919061346e565b925092509250611cdf838660a0013561209b565b611cfb5760405162461bcd60e51b81526004016105d790613244565b86881115611d635760405162461bcd60e51b815260206004820152602f60248201527f4d696e2064617465206d757374206265206c657373207468616e206f7220657160448201526e75616c20746f206d6178206461746560881b60648201526084016105d7565b6002866009811115611d7757611d77613405565b1480611d9457506003866009811115611d9257611d92613405565b145b611db05760405162461bcd60e51b81526004016105d790613499565b6002866009811115611dc457611dc4613405565b03611eaa57815f03611e595760405162461bcd60e51b815260206004820152605260248201527f5468652070726f6f66206c6f77657220626f756e64206d757374206265206e6f60448201527f6e2d7a65726f2c20706c656173652075736520697342697274686461746542656064820152711b1bddd3dc915c5d585b081a5b9cdd19585960721b608482015260a4016105d7565b805f03611e785760405162461bcd60e51b81526004016105d7906134c5565b611e866383aa7e8083613393565b88148015611ea05750611e9d6383aa7e8082613393565b87145b935050505061083f565b815f03611f3b5760405162461bcd60e51b815260206004820152605360248201527f5468652070726f6f66206c6f77657220626f756e64206d757374206265206e6f60448201527f6e2d7a65726f2c20706c65617365207573652069734578706972794461746542606482015272195b1bddd3dc915c5d585b081a5b9cdd195859606a1b608482015260a4016105d7565b805f03611f5a5760405162461bcd60e51b81526004016105d79061353d565b8188148015611ea057509095149695505050505050565b5f808073__$144f4fe859debe4776cdef2b99f7b97a42$__6384d40ca0611f9b6060870187612e89565b611fa86080890189612ecb565b8a6040518663ffffffff1660e01b8152600401611fc9959493929190613419565b5f60405180830381865af4158015611fe3573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261200a91908101906135b6565b9150915080865114612020575f9250505061087a565b5f5b8181101561208e5761207787828151811061203f5761203f61337f565b60200260200101518483815181106120595761205961337f565b60200260200101518051602091820120825192909101919091201490565b612086575f935050505061087a565b600101612022565b5060019695505050505050565b5f806120a78385612e3f565b90508342101580156120b857508381115b801561083f575042109392505050565b6002546040516383578c1160e01b815260036004820152602481018390526001600160a01b03909116906383578c1190604401602060405180830381865afa158015612116573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061213a91906133ea565b6121865760405162461bcd60e51b815260206004820152601f60248201527f496e76616c69642073616e6374696f6e7320726567697374727920726f6f740060448201526064016105d7565b50565b511590565b5f80808073__$144f4fe859debe4776cdef2b99f7b97a42$__638a8b3f926121b96060880188612e89565b6121c660808a018a612ecb565b8b6040518663ffffffff1660e01b81526004016121e7959493929190613419565b606060405180830381865af4158015612202573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612226919061346e565b92509250925061223a838660a0013561209b565b6122565760405162461bcd60e51b81526004016105d790613244565b81156122d45760405162461bcd60e51b815260206004820152604160248201527f5468652070726f6f66206c6f77657220626f756e64206d75737420626520302c60448201527f20706c6561736520757365206973446174654265747765656e20696e737465616064820152601960fa1b608482015260a4016105d7565b60028660098111156122e8576122e8613405565b14806123055750600386600981111561230357612303613405565b145b6123215760405162461bcd60e51b81526004016105d790613499565b600286600981111561233557612335613405565b0361236757805f036123595760405162461bcd60e51b81526004016105d7906134c5565b611b976383aa7e8082613393565b805f036123865760405162461bcd60e51b81526004016105d79061353d565b8614925061087a915050565b5f818152600160205260408120546001600160a01b03168061059a5760405162461bcd60e51b815260206004820152601260248201527115995c9a599a595c881b9bdd08199bdd5b9960721b60448201526064016105d7565b6002546040516383578c1160e01b815260016004820152602481018390526001600160a01b03909116906383578c1190604401602060405180830381865afa158015612439573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061245d91906133ea565b6121865760405162461bcd60e51b815260206004820152602160248201527f496e76616c696420636572746966696361746520726567697374727920726f6f6044820152601d60fa1b60648201526084016105d7565b600280546040516383578c1160e01b81526004810192909252602482018390526001600160a01b0316906383578c1190604401602060405180830381865afa158015612501573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061252591906133ea565b6121865760405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964206369726375697420726567697374727920726f6f7400000060448201526064016105d7565b5f5f836002815181106125865761258661337f565b60200260200101515f1c905061083f818461209b565b5f805b82518110156126dd575f60086002878786908887815181106125c3576125c361337f565b6020026020010151886125d69190612e3f565b926125e39392919061366f565b6040516020016125f492919061335a565b60408051601f198184030181529082905261260e91613369565b602060405180830381855afa158015612629573d5f5f3e3d5ffd5b5050506040513d601f19601f8201168201806040525081019061264c9190613343565b901c90508682815181106126625761266261337f565b602002602001015181146126ad5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a590818dbdb5b5a5d1b595b9d60721b60448201526064016105d7565b8382815181106126bf576126bf61337f565b6020026020010151836126d29190612e3f565b92505060010161259f565b508083146112d75760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420636f6d6d697474656420696e70757473206c656e6774680060448201526064016105d7565b5f610120828403121561273e575f5ffd5b50919050565b5f5f60408385031215612755575f5ffd5b8235915060208301356001600160401b03811115612771575f5ffd5b61277d8582860161272d565b9150509250929050565b8015158114612186575f5ffd5b5f602082840312156127a4575f5ffd5b813561087a81612787565b6001600160a01b0381168114612186575f5ffd5b5f602082840312156127d3575f5ffd5b813561087a816127af565b5f5f604083850312156127ef575f5ffd5b82356001600160401b03811115612804575f5ffd5b6128108582860161272d565b925050602083013561282181612787565b809150509250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f8251610100602084015261287761012084018261282c565b90506020840151601f19848303016040850152612894828261282c565b9150506040840151601f198483030160608501526128b2828261282c565b9150506060840151601f198483030160808501526128d0828261282c565b9150506080840151601f198483030160a08501526128ee828261282c565b91505060a0840151601f198483030160c085015261290c828261282c565b91505060c0840151601f198483030160e085015261292a828261282c565b91505060e0840151601f1984830301610100850152612949828261282c565b95945050505050565b60ff81168114612186575f5ffd5b5f5f60408385031215612971575f5ffd5b823561297c81612952565b915060208301356001600160401b03811115612771575f5ffd5b634e487b7160e01b5f52604160045260245ffd5b60405161010081016001600160401b03811182821017156129cd576129cd612996565b60405290565b604051601f8201601f191681016001600160401b03811182821017156129fb576129fb612996565b604052919050565b5f6001600160401b03821115612a1b57612a1b612996565b5060051b60200190565b5f6001600160401b03821115612a3d57612a3d612996565b50601f01601f191660200190565b5f5f60408385031215612a5c575f5ffd5b82356001600160401b03811115612a71575f5ffd5b8301601f81018513612a81575f5ffd5b8035612a94612a8f82612a03565b6129d3565b8082825260208201915060208360051b850101925087831115612ab5575f5ffd5b602084015b83811015612b355780356001600160401b03811115612ad7575f5ffd5b8501603f81018a13612ae7575f5ffd5b6020810135612af8612a8f82612a25565b8181526040838301018c1015612b0c575f5ffd5b816040840160208301375f60208383010152808652505050602083019250602081019050612aba565b50945050505060208301356001600160401b03811115612771575f5ffd5b5f5f5f60608486031215612b65575f5ffd5b833592506020840135915060408401356001600160401b03811115612b88575f5ffd5b612b948682870161272d565b9150509250925092565b5f60208284031215612bae575f5ffd5b81356001600160401b03811115612bc3575f5ffd5b61083f8482850161272d565b6020815260018060a01b038251166020820152602082015160408201525f604083015160608084015261083f608084018261282c565b5f5f5f60608486031215612c17575f5ffd5b8335612c2281612952565b92506020840135612c3281612952565b915060408401356001600160401b03811115612b88575f5ffd5b5f60208284031215612c5c575f5ffd5b5035919050565b5f5f83601f840112612c73575f5ffd5b5081356001600160401b03811115612c89575f5ffd5b6020830191508360208260051b8501011115612ca3575f5ffd5b9250929050565b5f5f83601f840112612cba575f5ffd5b5081356001600160401b03811115612cd0575f5ffd5b602083019150836020828501011115612ca3575f5ffd5b5f5f5f5f5f5f60608789031215612cfc575f5ffd5b86356001600160401b03811115612d11575f5ffd5b612d1d89828a01612c63565b90975095505060208701356001600160401b03811115612d3b575f5ffd5b612d4789828a01612caa565b90955093505060408701356001600160401b03811115612d65575f5ffd5b612d7189828a01612caa565b979a9699509497509295939492505050565b5f5f60208385031215612d94575f5ffd5b82356001600160401b03811115612da9575f5ffd5b612db585828601612c63565b90969095509350505050565b5f5f5f5f60408587031215612dd4575f5ffd5b84356001600160401b03811115612de9575f5ffd5b612df587828801612c63565b90955093505060208501356001600160401b03811115612e13575f5ffd5b612e1f87828801612c63565b95989497509550505050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561059a5761059a612e2b565b6020808252601a908201527f4e6f7420617574686f72697a65643a2061646d696e206f6e6c79000000000000604082015260600190565b5f5f8335601e19843603018112612e9e575f5ffd5b8301803591506001600160401b03821115612eb7575f5ffd5b602001915036819003821315612ca3575f5ffd5b5f5f8335601e19843603018112612ee0575f5ffd5b8301803591506001600160401b03821115612ef9575f5ffd5b6020019150600581901b3603821315612ca3575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b8183525f6001600160fb1b03831115612f4f575f5ffd5b8260051b80836020870137939093016020019392505050565b604081525f612f7b604083018688612f10565b8281036020840152610d8b818587612f38565b5f82601f830112612f9d575f5ffd5b8151602083015f612fb0612a8f84612a25565b9050828152858383011115612fc3575f5ffd5b8282602083015e5f92810160200192909252509392505050565b5f5f60408385031215612fee575f5ffd5b82516001600160401b03811115613003575f5ffd5b61300f85828601612f8e565b92505060208301516001600160401b0381111561302a575f5ffd5b61277d85828601612f8e565b604081525f613048604083018561282c565b905082151560208301529392505050565b5f60208284031215613069575f5ffd5b81516001600160401b0381111561307e575f5ffd5b82016101008185031215613090575f5ffd5b6130986129aa565b81516001600160401b038111156130ad575f5ffd5b6130b986828501612f8e565b82525060208201516001600160401b038111156130d4575f5ffd5b6130e086828501612f8e565b60208301525060408201516001600160401b038111156130fe575f5ffd5b61310a86828501612f8e565b60408301525060608201516001600160401b03811115613128575f5ffd5b61313486828501612f8e565b60608301525060808201516001600160401b03811115613152575f5ffd5b61315e86828501612f8e565b60808301525060a08201516001600160401b0381111561317c575f5ffd5b61318886828501612f8e565b60a08301525060c08201516001600160401b038111156131a6575f5ffd5b6131b286828501612f8e565b60c08301525060e08201516001600160401b038111156131d0575f5ffd5b6131dc86828501612f8e565b60e083015250949350505050565b60ff818116838216019081111561059a5761059a612e2b565b5f5f5f60608486031215613215575f5ffd5b8351602085015190935061322881612952565b604085015190925061323981612952565b809150509250925092565b6020808252604b908201527f5468652063757272656e742064617465207573656420696e207468652070726f60408201527f6f6620646f6573206e6f742066616c6c2077697468696e207468652076616c6960608201526a191a5d1e481c195c9a5bd960aa1b608082015260a00190565b5f602082840312156132c5575f5ffd5b81516001600160401b038111156132da575f5ffd5b61083f84828501612f8e565b602081525f610597602083018461282c565b5f5f5f6060848603121561330a575f5ffd5b8351613315816127af565b6020850151604086015191945092506001600160401b03811115613337575f5ffd5b612b9486828701612f8e565b5f60208284031215613353575f5ffd5b5051919050565b818382375f9101908152919050565b5f82518060208501845e5f920191825250919050565b634e487b7160e01b5f52603260045260245ffd5b8181038181111561059a5761059a612e2b565b60ff828116828216039081111561059a5761059a612e2b565b5f5f858511156133cd575f5ffd5b838611156133d9575f5ffd5b5050600583901b0193919092039150565b5f602082840312156133fa575f5ffd5b815161087a81612787565b634e487b7160e01b5f52602160045260245ffd5b606081525f61342c606083018789612f10565b828103602084015261343f818688612f38565b915050600a831061345e57634e487b7160e01b5f52602160045260245ffd5b8260408301529695505050505050565b5f5f5f60608486031215613480575f5ffd5b5050815160208301516040909301519094929350919050565b602080825260129082015271496e76616c69642070726f6f66207479706560701b604082015260600190565b60208082526052908201527f5468652070726f6f6620757070657220626f756e64206d757374206265206e6f60408201527f6e2d7a65726f2c20706c656173652075736520697342697274686461746541626060820152711bdd9953dc915c5d585b081a5b9cdd19585960721b608082015260a00190565b60208082526053908201527f5468652070726f6f6620757070657220626f756e64206d757374206265206e6f60408201527f6e2d7a65726f2c20706c65617365207573652069734578706972794461746541606082015272189bdd9953dc915c5d585b081a5b9cdd195859606a1b608082015260a00190565b5f5f604083850312156135c7575f5ffd5b82516001600160401b038111156135dc575f5ffd5b8301601f810185136135ec575f5ffd5b80516135fa612a8f82612a03565b8082825260208201915060208360051b85010192508783111561361b575f5ffd5b602084015b8381101561365b5780516001600160401b0381111561363d575f5ffd5b61364c8a602083890101612f8e565b84525060209283019201613620565b506020969096015195979596505050505050565b5f5f8585111561367d575f5ffd5b83861115613689575f5ffd5b505082019391909203915056fea26469706673582212201ad0934c58c94945ad619ae11884148cc3af0f513c363543f6833c83eb4947ff64736f6c634300081d0033",
    "sourceMap": "620:27253:26:-:0;;;1762:256;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1811:27:26;;1803:76;;;;-1:-1:-1;;;1803:76:26;;511:2:33;1803:76:26;;;493:21:33;550:2;530:18;;;523:30;589:34;569:18;;;562:62;-1:-1:-1;;;640:18:33;;;633:34;684:19;;1803:76:26;;;;;;;;1885:5;:18;;1893:10;-1:-1:-1;;;;;;1885:18:26;;;;;;;;1909:12;:43;;;;;-1:-1:-1;;;;;1909:43:26;;;;;1963:50;;1997:15;860:25:33;;1963:50:26;;848:2:33;833:18;1963:50:26;;;;;;;1762:256;620:27253;;14:290:33;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:33;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:33:o;714:177::-;620:27253:26;;;;;;",
    "linkReferences": {
      "src/InputsExtractor.sol": {
        "InputsExtractor": [
          { "start": 2143, "length": 20 },
          { "start": 2307, "length": 20 },
          { "start": 2500, "length": 20 },
          { "start": 2861, "length": 20 },
          { "start": 3025, "length": 20 },
          { "start": 3163, "length": 20 },
          { "start": 3785, "length": 20 },
          { "start": 5165, "length": 20 },
          { "start": 6926, "length": 20 },
          { "start": 7529, "length": 20 },
          { "start": 8358, "length": 20 },
          { "start": 8900, "length": 20 }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f5ffd5b5060043610610234575f3560e01c80638163f23111610135578063c4560786116100b4578063e420e35411610079578063e420e35414610520578063e718bc3214610533578063ec46f77414610546578063f851a44014610559578063f87e19b11461056b575f5ffd5b8063c4560786146104aa578063cfd9464a146104bd578063d3f6ffff146104d0578063d7bf616a146104e3578063deb7c0591461050d575f5ffd5b8063a88f1cef116100fa578063a88f1cef1461044b578063aa1346ea1461045e578063b96b161c14610471578063bf73c26c14610484578063c0940ebd14610497575f5ffd5b80638163f231146103bf578063847755e3146103ff5780638d6937b814610412578063921076c714610425578063a6df2c0114610438575f5ffd5b80634c127428116101c1578063652ba33d11610186578063652ba33d14610376578063653cfd811461037e5780636c40d5d614610391578063704876d61461039957806375829def146103ac575f5ffd5b80634c1274281461030a57806354dbe4d11461031d57806359545f45146103305780635c975abb1461035057806362067c8214610363575f5ffd5b80631e26a9dc116102075780631e26a9dc1461029b57806337889655146102bb5780633a86bd3d146102ce57806341a0e2c2146102e157806346bd0a16146102f7575f5ffd5b806304951b86146102385780630b90581b1461026057806316c38b3c1461027357806318677f2a14610288575b5f5ffd5b61024b610246366004612744565b61057e565b60405190151581526020015b60405180910390f35b61024b61026e366004612744565b6105a0565b610286610281366004612794565b6105ae565b005b6102866102963660046127c3565b610637565b6102ae6102a93660046127de565b6106e4565b604051610257919061285a565b61024b6102c9366004612960565b610847565b61024b6102dc366004612a4b565b61085c565b6102e9600181565b604051908152602001610257565b61024b610305366004612b53565b610869565b61024b610318366004612744565b610881565b61024b61032b366004612960565b61088e565b61034361033e366004612b9e565b6109df565b6040516102579190612bcf565b5f5461024b90600160a01b900460ff1681565b61024b610371366004612c05565b610b25565b6102e9600381565b61028661038c366004612b9e565b610d96565b6102e9600281565b61024b6103a7366004612744565b610e38565b6102866103ba3660046127c3565b610e45565b6103e76103cd366004612c4c565b60016020525f90815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610257565b61024b61040d366004612ce7565b610f13565b610286610420366004612d83565b6110db565b61024b610433366004612744565b61119b565b610286610446366004612dc1565b6111b4565b61024b610459366004612744565b6112de565b61024b61046c366004612960565b6112f7565b6002546103e7906001600160a01b031681565b61024b610492366004612960565b611448565b61024b6104a5366004612960565b6114af565b61024b6104b8366004612b53565b6114bb565b61024b6104cb366004612744565b6114c9565b61024b6104de366004612744565b6114d7565b6104f66104f1366004612b9e565b6114f0565b604080519215158352602083019190915201610257565b61024b61051b366004612744565b611997565b61024b61052e366004612a4b565b6119a4565b61024b610541366004612744565b6119b1565b61024b610554366004612a4b565b6119be565b5f546103e7906001600160a01b031681565b61024b610579366004612a4b565b6119cb565b5f61059761058f8462015180612e3f565b6002846119d8565b90505b92915050565b5f6105978384600285611c33565b5f546001600160a01b031633146105e05760405162461bcd60e51b81526004016105d790612e52565b60405180910390fd5b5f8054821515600160a01b0260ff60a01b199091161790556040517f9a506b30e47f3823b09f67e4c0dfa5c3d8023b71825b7ceaa97677129128c9c59061062c90831515815260200190565b60405180910390a150565b5f546001600160a01b031633146106605760405162461bcd60e51b81526004016105d790612e52565b6001600160a01b0381166106c25760405162461bcd60e51b8152602060048201526024808201527f526f6f742072656769737472792063616e6e6f74206265207a65726f206164646044820152637265737360e01b60648201526084016105d7565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61072c60405180610100016040528060608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b5f73__$144f4fe859debe4776cdef2b99f7b97a42$__63ddf3eec96107546060870187612e89565b6107616080890189612ecb565b6040518563ffffffff1660e01b81526004016107809493929190612f68565b5f60405180830381865af415801561079a573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526107c19190810190612fdd565b6040516301e9bf5760e11b815290925073__$144f4fe859debe4776cdef2b99f7b97a42$__91506303d37eae906107fe9084908790600401613036565b5f60405180830381865af4158015610818573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261083f9190810190613059565b949350505050565b5f6105976108568460016131ea565b8361088e565b5f61059783600784611f71565b5f6108778484600385611c33565b90505b9392505050565b5f610597836003846119d8565b5f80808073__$144f4fe859debe4776cdef2b99f7b97a42$__63b2b37a4c6108b96060880188612e89565b6108c660808a018a612ecb565b6040518563ffffffff1660e01b81526004016108e59493929190612f68565b606060405180830381865af4158015610900573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109249190613203565b925092509250610938838660a0013561209b565b6109545760405162461bcd60e51b81526004016105d790613244565b60ff8116156109cd576040805162461bcd60e51b81526020600482015260248101919091527f5468652070726f6f6620757070657220626f756e64206d75737420626520302c60448201527f20706c65617365207573652069734167654265747765656e20696e737465616460648201526084016105d7565b5060ff85811691161491505092915050565b60408051606080820183525f8083526020830152918101919091525f73__$144f4fe859debe4776cdef2b99f7b97a42$__634601173c610a226060860186612e89565b610a2f6080880188612ecb565b6040518563ffffffff1660e01b8152600401610a4e9493929190612f68565b5f60405180830381865af4158015610a68573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610a8f91908101906132b5565b604051630578c5d360e11b815290915073__$144f4fe859debe4776cdef2b99f7b97a42$__90630af18ba690610ac99084906004016132e6565b5f60405180830381865af4158015610ae3573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610b0a91908101906132f8565b604085015260208401526001600160a01b0316825250919050565b5f80808073__$144f4fe859debe4776cdef2b99f7b97a42$__63b2b37a4c610b506060880188612e89565b610b5d60808a018a612ecb565b6040518563ffffffff1660e01b8152600401610b7c9493929190612f68565b606060405180830381865af4158015610b97573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bbb9190613203565b925092509250610bcf838660a0013561209b565b610beb5760405162461bcd60e51b81526004016105d790613244565b8560ff168760ff161115610c575760405162461bcd60e51b815260206004820152602d60248201527f4d696e20616765206d757374206265206c657373207468616e206f722065717560448201526c616c20746f206d61782061676560981b60648201526084016105d7565b8160ff165f03610ce45760405162461bcd60e51b815260206004820152604c60248201527f5468652070726f6f66206c6f77657220626f756e64206d757374206265206e6f60448201527f6e2d7a65726f2c20706c656173652075736520697341676542656c6f774f724560648201526b1c5d585b081a5b9cdd19585960a21b608482015260a4016105d7565b8060ff165f03610d715760405162461bcd60e51b815260206004820152604c60248201527f5468652070726f6f6620757070657220626f756e64206d757374206265206e6f60448201527f6e2d7a65726f2c20706c656173652075736520697341676541626f76654f724560648201526b1c5d585b081a5b9cdd19585960a21b608482015260a4016105d7565b8160ff168760ff16148015610d8b57508060ff168660ff16145b979650505050505050565b5f73__$144f4fe859debe4776cdef2b99f7b97a42$__63fbd24457610dbe6060850185612e89565b610dcb6080870187612ecb565b6040518563ffffffff1660e01b8152600401610dea9493929190612f68565b602060405180830381865af4158015610e05573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e299190613343565b9050610e34816120c8565b5050565b5f610597836002846119d8565b5f546001600160a01b03163314610e6e5760405162461bcd60e51b81526004016105d790612e52565b6001600160a01b038116610ec45760405162461bcd60e51b815260206004820152601c60248201527f41646d696e2063616e6e6f74206265207a65726f20616464726573730000000060448201526064016105d7565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f101b8081ff3b56bbf45deb824d86a3b0fd38b7e3dd42421105cf8abe9106db0b9190a35050565b5f5f610f5386868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061218992505050565b610fcd57600860028787604051602001610f6e92919061335a565b60408051601f1981840301815290829052610f8891613369565b602060405180830381855afa158015610fa3573d5f5f3e3d5ffd5b5050506040513d601f19601f82011682018060405250810190610fc69190613343565b901c610fcf565b5f5b90505f61101085858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061218992505050565b61108a5760086002868660405160200161102b92919061335a565b60408051601f198184030181529082905261104591613369565b602060405180830381855afa158015611060573d5f5f3e3d5ffd5b5050506040513d601f19601f820116820180604052508101906110839190613343565b901c61108c565b5f5b905081898960038181106110a2576110a261337f565b905060200201351480156110ce575080898960048181106110c5576110c561337f565b90506020020135145b9998505050505050505050565b5f546001600160a01b031633146111045760405162461bcd60e51b81526004016105d790612e52565b5f5b818110156111965760015f8484848181106111235761112361337f565b602090810292909201358352508101919091526040015f2080546001600160a01b031916905582828281811061115b5761115b61337f565b905060200201357f6fdcbcf8f91bc23f2c9dcfe8fe01d80d1b1afbbf207298e94c0171ccc587424c60405160405180910390a2600101611106565b505050565b5f6105976111ac6201518085613393565b60028461218e565b5f546001600160a01b031633146111dd5760405162461bcd60e51b81526004016105d790612e52565b5f5b838110156112d7578282828181106111f9576111f961337f565b905060200201602081019061120e91906127c3565b60015f8787858181106112235761122361337f565b9050602002013581526020019081526020015f205f6101000a8154816001600160a01b0302191690836001600160a01b0316021790555082828281811061126c5761126c61337f565b905060200201602081019061128191906127c3565b6001600160a01b031685858381811061129c5761129c61337f565b905060200201357f636107338a3eb46f1f60562462f3ec11393d35fbc965991aaade3b9e7d89c3f560405160405180910390a36001016111df565b5050505050565b5f6105976112ef6201518085613393565b60038461218e565b5f80808073__$144f4fe859debe4776cdef2b99f7b97a42$__63b2b37a4c6113226060880188612e89565b61132f60808a018a612ecb565b6040518563ffffffff1660e01b815260040161134e9493929190612f68565b606060405180830381865af4158015611369573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061138d9190613203565b9250925092506113a1838660a0013561209b565b6113bd5760405162461bcd60e51b81526004016105d790613244565b60ff821615611436576040805162461bcd60e51b81526020600482015260248101919091527f5468652070726f6f66206c6f77657220626f756e64206d75737420626520302c60448201527f20706c65617365207573652069734167654265747765656e20696e737465616460648201526084016105d7565b60ff8681169116149250505092915050565b5f5f8360ff161161149b5760405162461bcd60e51b815260206004820152601e60248201527f4d617820616765206d7573742062652067726561746572207468616e2030000060448201526064016105d7565b6105976114a96001856133a6565b836112f7565b5f610597838484610b25565b5f6108778484600285611c33565b5f6105978384600385611c33565b5f6105976114e88462015180612e3f565b6003846119d8565b5f80548190600160a01b900460ff16156115415760405162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b60448201526064016105d7565b5f61154c8435612392565b905061157a61155e6040860186612ecb565b5f81811061156e5761156e61337f565b905060200201356123eb565b6115a761158a6040860186612ecb565b600181811061159b5761159b61337f565b905060200201356124b3565b6115f16115b76040860186612ecb565b808060200260200160405190810160405280939291908181526020018383602002808284375f9201919091525050505060a0860135612571565b6116595760405162461bcd60e51b815260206004820152603360248201527f5468652070726f6f66207761732067656e657261746564206f757473696465206044820152721d1a19481d985b1a591a5d1e481c195c9a5bd9606a1b60648201526084016105d7565b6116836116696040860186612ecb565b61167660c0880188612e89565b61040d60e08a018a612e89565b6116cf5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420646f6d61696e206f722073636f706500000000000000000060448201526064016105d7565b61178a6116df6040860186612ecb565b60059060016116f160408a018a612ecb565b6116fc929150613393565b92611709939291906133bf565b808060200260200160405190810160405280939291908181526020018383602002808284375f92019190915250611747925050506060870187612e89565b6117546080890189612ecb565b808060200260200160405190810160405280939291908181526020018383602002808284375f9201919091525061259c92505050565b60016117996040860186612ecb565b60016117a86040890189612ecb565b6117b3929150613393565b8181106117c2576117c261337f565b905060200201351415806117e357506117e361012085016101008601612794565b6118405760405162461bcd60e51b815260206004820152602860248201527f4d6f636b2070726f6f667320617265206f6e6c7920616c6c6f77656420696e20604482015267646576206d6f646560c01b60648201526084016105d7565b600661184f6040860186612ecb565b61185a929150613393565b6118676080860186612ecb565b9050146118c45760405162461bcd60e51b815260206004820152602560248201527f496e76616c696420636f6d6d697474656420696e70757420636f756e7473206c6044820152640cadccee8d60db1b60648201526084016105d7565b6001600160a01b03811663ea50d0e46118e06020870187612e89565b6118ed6040890189612ecb565b6040518563ffffffff1660e01b815260040161190c9493929190612f68565b602060405180830381865afa158015611927573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061194b91906133ea565b92505f600161195d6040870187612ecb565b611968929150613393565b90506119776040860186612ecb565b828181106119875761198761337f565b9050602002013592505050915091565b5f6105978360028461218e565b5f61059783600584611f71565b5f6105978360038461218e565b5f61059783600684611f71565b5f61059783600484611f71565b5f80808073__$144f4fe859debe4776cdef2b99f7b97a42$__638a8b3f92611a036060880188612e89565b611a1060808a018a612ecb565b8b6040518663ffffffff1660e01b8152600401611a31959493929190613419565b606060405180830381865af4158015611a4c573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a70919061346e565b925092509250611a84838660a0013561209b565b611aa05760405162461bcd60e51b81526004016105d790613244565b6002866009811115611ab457611ab4613405565b1480611ad157506003866009811115611acf57611acf613405565b145b611aed5760405162461bcd60e51b81526004016105d790613499565b6002866009811115611b0157611b01613405565b03611ba3578015611b895760405162461bcd60e51b815260206004820152604660248201527f5468652070726f6f6620757070657220626f756e64206d75737420626520302c60448201527f20706c65617365207573652069734269727468646174654265747765656e20696064820152651b9cdd19585960d21b608482015260a4016105d7565b611b976383aa7e8083613393565b8714935050505061087a565b8015611c275760405162461bcd60e51b815260206004820152604760248201527f5468652070726f6f6620757070657220626f756e64206d75737420626520302c60448201527f20706c6561736520757365206973457870697279446174654265747765656e206064820152661a5b9cdd19585960ca1b608482015260a4016105d7565b508514915061087a9050565b5f80808073__$144f4fe859debe4776cdef2b99f7b97a42$__638a8b3f92611c5e6060880188612e89565b611c6b60808a018a612ecb565b8b6040518663ffffffff1660e01b8152600401611c8c959493929190613419565b606060405180830381865af4158015611ca7573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ccb919061346e565b925092509250611cdf838660a0013561209b565b611cfb5760405162461bcd60e51b81526004016105d790613244565b86881115611d635760405162461bcd60e51b815260206004820152602f60248201527f4d696e2064617465206d757374206265206c657373207468616e206f7220657160448201526e75616c20746f206d6178206461746560881b60648201526084016105d7565b6002866009811115611d7757611d77613405565b1480611d9457506003866009811115611d9257611d92613405565b145b611db05760405162461bcd60e51b81526004016105d790613499565b6002866009811115611dc457611dc4613405565b03611eaa57815f03611e595760405162461bcd60e51b815260206004820152605260248201527f5468652070726f6f66206c6f77657220626f756e64206d757374206265206e6f60448201527f6e2d7a65726f2c20706c656173652075736520697342697274686461746542656064820152711b1bddd3dc915c5d585b081a5b9cdd19585960721b608482015260a4016105d7565b805f03611e785760405162461bcd60e51b81526004016105d7906134c5565b611e866383aa7e8083613393565b88148015611ea05750611e9d6383aa7e8082613393565b87145b935050505061083f565b815f03611f3b5760405162461bcd60e51b815260206004820152605360248201527f5468652070726f6f66206c6f77657220626f756e64206d757374206265206e6f60448201527f6e2d7a65726f2c20706c65617365207573652069734578706972794461746542606482015272195b1bddd3dc915c5d585b081a5b9cdd195859606a1b608482015260a4016105d7565b805f03611f5a5760405162461bcd60e51b81526004016105d79061353d565b8188148015611ea057509095149695505050505050565b5f808073__$144f4fe859debe4776cdef2b99f7b97a42$__6384d40ca0611f9b6060870187612e89565b611fa86080890189612ecb565b8a6040518663ffffffff1660e01b8152600401611fc9959493929190613419565b5f60405180830381865af4158015611fe3573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261200a91908101906135b6565b9150915080865114612020575f9250505061087a565b5f5b8181101561208e5761207787828151811061203f5761203f61337f565b60200260200101518483815181106120595761205961337f565b60200260200101518051602091820120825192909101919091201490565b612086575f935050505061087a565b600101612022565b5060019695505050505050565b5f806120a78385612e3f565b90508342101580156120b857508381115b801561083f575042109392505050565b6002546040516383578c1160e01b815260036004820152602481018390526001600160a01b03909116906383578c1190604401602060405180830381865afa158015612116573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061213a91906133ea565b6121865760405162461bcd60e51b815260206004820152601f60248201527f496e76616c69642073616e6374696f6e7320726567697374727920726f6f740060448201526064016105d7565b50565b511590565b5f80808073__$144f4fe859debe4776cdef2b99f7b97a42$__638a8b3f926121b96060880188612e89565b6121c660808a018a612ecb565b8b6040518663ffffffff1660e01b81526004016121e7959493929190613419565b606060405180830381865af4158015612202573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612226919061346e565b92509250925061223a838660a0013561209b565b6122565760405162461bcd60e51b81526004016105d790613244565b81156122d45760405162461bcd60e51b815260206004820152604160248201527f5468652070726f6f66206c6f77657220626f756e64206d75737420626520302c60448201527f20706c6561736520757365206973446174654265747765656e20696e737465616064820152601960fa1b608482015260a4016105d7565b60028660098111156122e8576122e8613405565b14806123055750600386600981111561230357612303613405565b145b6123215760405162461bcd60e51b81526004016105d790613499565b600286600981111561233557612335613405565b0361236757805f036123595760405162461bcd60e51b81526004016105d7906134c5565b611b976383aa7e8082613393565b805f036123865760405162461bcd60e51b81526004016105d79061353d565b8614925061087a915050565b5f818152600160205260408120546001600160a01b03168061059a5760405162461bcd60e51b815260206004820152601260248201527115995c9a599a595c881b9bdd08199bdd5b9960721b60448201526064016105d7565b6002546040516383578c1160e01b815260016004820152602481018390526001600160a01b03909116906383578c1190604401602060405180830381865afa158015612439573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061245d91906133ea565b6121865760405162461bcd60e51b815260206004820152602160248201527f496e76616c696420636572746966696361746520726567697374727920726f6f6044820152601d60fa1b60648201526084016105d7565b600280546040516383578c1160e01b81526004810192909252602482018390526001600160a01b0316906383578c1190604401602060405180830381865afa158015612501573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061252591906133ea565b6121865760405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964206369726375697420726567697374727920726f6f7400000060448201526064016105d7565b5f5f836002815181106125865761258661337f565b60200260200101515f1c905061083f818461209b565b5f805b82518110156126dd575f60086002878786908887815181106125c3576125c361337f565b6020026020010151886125d69190612e3f565b926125e39392919061366f565b6040516020016125f492919061335a565b60408051601f198184030181529082905261260e91613369565b602060405180830381855afa158015612629573d5f5f3e3d5ffd5b5050506040513d601f19601f8201168201806040525081019061264c9190613343565b901c90508682815181106126625761266261337f565b602002602001015181146126ad5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a590818dbdb5b5a5d1b595b9d60721b60448201526064016105d7565b8382815181106126bf576126bf61337f565b6020026020010151836126d29190612e3f565b92505060010161259f565b508083146112d75760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420636f6d6d697474656420696e70757473206c656e6774680060448201526064016105d7565b5f610120828403121561273e575f5ffd5b50919050565b5f5f60408385031215612755575f5ffd5b8235915060208301356001600160401b03811115612771575f5ffd5b61277d8582860161272d565b9150509250929050565b8015158114612186575f5ffd5b5f602082840312156127a4575f5ffd5b813561087a81612787565b6001600160a01b0381168114612186575f5ffd5b5f602082840312156127d3575f5ffd5b813561087a816127af565b5f5f604083850312156127ef575f5ffd5b82356001600160401b03811115612804575f5ffd5b6128108582860161272d565b925050602083013561282181612787565b809150509250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f8251610100602084015261287761012084018261282c565b90506020840151601f19848303016040850152612894828261282c565b9150506040840151601f198483030160608501526128b2828261282c565b9150506060840151601f198483030160808501526128d0828261282c565b9150506080840151601f198483030160a08501526128ee828261282c565b91505060a0840151601f198483030160c085015261290c828261282c565b91505060c0840151601f198483030160e085015261292a828261282c565b91505060e0840151601f1984830301610100850152612949828261282c565b95945050505050565b60ff81168114612186575f5ffd5b5f5f60408385031215612971575f5ffd5b823561297c81612952565b915060208301356001600160401b03811115612771575f5ffd5b634e487b7160e01b5f52604160045260245ffd5b60405161010081016001600160401b03811182821017156129cd576129cd612996565b60405290565b604051601f8201601f191681016001600160401b03811182821017156129fb576129fb612996565b604052919050565b5f6001600160401b03821115612a1b57612a1b612996565b5060051b60200190565b5f6001600160401b03821115612a3d57612a3d612996565b50601f01601f191660200190565b5f5f60408385031215612a5c575f5ffd5b82356001600160401b03811115612a71575f5ffd5b8301601f81018513612a81575f5ffd5b8035612a94612a8f82612a03565b6129d3565b8082825260208201915060208360051b850101925087831115612ab5575f5ffd5b602084015b83811015612b355780356001600160401b03811115612ad7575f5ffd5b8501603f81018a13612ae7575f5ffd5b6020810135612af8612a8f82612a25565b8181526040838301018c1015612b0c575f5ffd5b816040840160208301375f60208383010152808652505050602083019250602081019050612aba565b50945050505060208301356001600160401b03811115612771575f5ffd5b5f5f5f60608486031215612b65575f5ffd5b833592506020840135915060408401356001600160401b03811115612b88575f5ffd5b612b948682870161272d565b9150509250925092565b5f60208284031215612bae575f5ffd5b81356001600160401b03811115612bc3575f5ffd5b61083f8482850161272d565b6020815260018060a01b038251166020820152602082015160408201525f604083015160608084015261083f608084018261282c565b5f5f5f60608486031215612c17575f5ffd5b8335612c2281612952565b92506020840135612c3281612952565b915060408401356001600160401b03811115612b88575f5ffd5b5f60208284031215612c5c575f5ffd5b5035919050565b5f5f83601f840112612c73575f5ffd5b5081356001600160401b03811115612c89575f5ffd5b6020830191508360208260051b8501011115612ca3575f5ffd5b9250929050565b5f5f83601f840112612cba575f5ffd5b5081356001600160401b03811115612cd0575f5ffd5b602083019150836020828501011115612ca3575f5ffd5b5f5f5f5f5f5f60608789031215612cfc575f5ffd5b86356001600160401b03811115612d11575f5ffd5b612d1d89828a01612c63565b90975095505060208701356001600160401b03811115612d3b575f5ffd5b612d4789828a01612caa565b90955093505060408701356001600160401b03811115612d65575f5ffd5b612d7189828a01612caa565b979a9699509497509295939492505050565b5f5f60208385031215612d94575f5ffd5b82356001600160401b03811115612da9575f5ffd5b612db585828601612c63565b90969095509350505050565b5f5f5f5f60408587031215612dd4575f5ffd5b84356001600160401b03811115612de9575f5ffd5b612df587828801612c63565b90955093505060208501356001600160401b03811115612e13575f5ffd5b612e1f87828801612c63565b95989497509550505050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561059a5761059a612e2b565b6020808252601a908201527f4e6f7420617574686f72697a65643a2061646d696e206f6e6c79000000000000604082015260600190565b5f5f8335601e19843603018112612e9e575f5ffd5b8301803591506001600160401b03821115612eb7575f5ffd5b602001915036819003821315612ca3575f5ffd5b5f5f8335601e19843603018112612ee0575f5ffd5b8301803591506001600160401b03821115612ef9575f5ffd5b6020019150600581901b3603821315612ca3575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b8183525f6001600160fb1b03831115612f4f575f5ffd5b8260051b80836020870137939093016020019392505050565b604081525f612f7b604083018688612f10565b8281036020840152610d8b818587612f38565b5f82601f830112612f9d575f5ffd5b8151602083015f612fb0612a8f84612a25565b9050828152858383011115612fc3575f5ffd5b8282602083015e5f92810160200192909252509392505050565b5f5f60408385031215612fee575f5ffd5b82516001600160401b03811115613003575f5ffd5b61300f85828601612f8e565b92505060208301516001600160401b0381111561302a575f5ffd5b61277d85828601612f8e565b604081525f613048604083018561282c565b905082151560208301529392505050565b5f60208284031215613069575f5ffd5b81516001600160401b0381111561307e575f5ffd5b82016101008185031215613090575f5ffd5b6130986129aa565b81516001600160401b038111156130ad575f5ffd5b6130b986828501612f8e565b82525060208201516001600160401b038111156130d4575f5ffd5b6130e086828501612f8e565b60208301525060408201516001600160401b038111156130fe575f5ffd5b61310a86828501612f8e565b60408301525060608201516001600160401b03811115613128575f5ffd5b61313486828501612f8e565b60608301525060808201516001600160401b03811115613152575f5ffd5b61315e86828501612f8e565b60808301525060a08201516001600160401b0381111561317c575f5ffd5b61318886828501612f8e565b60a08301525060c08201516001600160401b038111156131a6575f5ffd5b6131b286828501612f8e565b60c08301525060e08201516001600160401b038111156131d0575f5ffd5b6131dc86828501612f8e565b60e083015250949350505050565b60ff818116838216019081111561059a5761059a612e2b565b5f5f5f60608486031215613215575f5ffd5b8351602085015190935061322881612952565b604085015190925061323981612952565b809150509250925092565b6020808252604b908201527f5468652063757272656e742064617465207573656420696e207468652070726f60408201527f6f6620646f6573206e6f742066616c6c2077697468696e207468652076616c6960608201526a191a5d1e481c195c9a5bd960aa1b608082015260a00190565b5f602082840312156132c5575f5ffd5b81516001600160401b038111156132da575f5ffd5b61083f84828501612f8e565b602081525f610597602083018461282c565b5f5f5f6060848603121561330a575f5ffd5b8351613315816127af565b6020850151604086015191945092506001600160401b03811115613337575f5ffd5b612b9486828701612f8e565b5f60208284031215613353575f5ffd5b5051919050565b818382375f9101908152919050565b5f82518060208501845e5f920191825250919050565b634e487b7160e01b5f52603260045260245ffd5b8181038181111561059a5761059a612e2b565b60ff828116828216039081111561059a5761059a612e2b565b5f5f858511156133cd575f5ffd5b838611156133d9575f5ffd5b5050600583901b0193919092039150565b5f602082840312156133fa575f5ffd5b815161087a81612787565b634e487b7160e01b5f52602160045260245ffd5b606081525f61342c606083018789612f10565b828103602084015261343f818688612f38565b915050600a831061345e57634e487b7160e01b5f52602160045260245ffd5b8260408301529695505050505050565b5f5f5f60608486031215613480575f5ffd5b5050815160208301516040909301519094929350919050565b602080825260129082015271496e76616c69642070726f6f66207479706560701b604082015260600190565b60208082526052908201527f5468652070726f6f6620757070657220626f756e64206d757374206265206e6f60408201527f6e2d7a65726f2c20706c656173652075736520697342697274686461746541626060820152711bdd9953dc915c5d585b081a5b9cdd19585960721b608082015260a00190565b60208082526053908201527f5468652070726f6f6620757070657220626f756e64206d757374206265206e6f60408201527f6e2d7a65726f2c20706c65617365207573652069734578706972794461746541606082015272189bdd9953dc915c5d585b081a5b9cdd195859606a1b608082015260a00190565b5f5f604083850312156135c7575f5ffd5b82516001600160401b038111156135dc575f5ffd5b8301601f810185136135ec575f5ffd5b80516135fa612a8f82612a03565b8082825260208201915060208360051b85010192508783111561361b575f5ffd5b602084015b8381101561365b5780516001600160401b0381111561363d575f5ffd5b61364c8a602083890101612f8e565b84525060209283019201613620565b506020969096015195979596505050505050565b5f5f8585111561367d575f5ffd5b83861115613689575f5ffd5b505082019391909203915056fea26469706673582212201ad0934c58c94945ad619ae11884148cc3af0f513c363543f6833c83eb4947ff64736f6c634300081d0033",
    "sourceMap": "620:27253:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12931:206;;;;;;:::i;:::-;;:::i;:::-;;;864:14:33;;857:22;839:41;;827:2;812:18;12931:206:26;;;;;;;;14970:192;;;;;;:::i;:::-;;:::i;2441:118::-;;;;;;:::i;:::-;;:::i;:::-;;3092:206;;;;;;:::i;:::-;;:::i;3833:369::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5263:169::-;;;;;;:::i;:::-;;:::i;20967:230::-;;;;;;:::i;:::-;;:::i;652:69::-;;718:1;652:69;;;;;7807:25:33;;;7795:2;7780:18;652:69:26;7661:177:33;16515:227:26;;;;;;:::i;:::-;;:::i;15468:207::-;;;;;;:::i;:::-;;:::i;4480:541::-;;;;;;:::i;:::-;;:::i;21363:347::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;890:18::-;;;;;-1:-1:-1;;;890:18:26;;;;;;5757:766;;;;;;:::i;:::-;;:::i;794:67::-;;858:1;794:67;;21861:271;;;;;;:::i;:::-;;:::i;725:65::-;;787:1;725:65;;12463:204;;;;;;:::i;:::-;;:::i;2208:229::-;;;;;;:::i;:::-;;:::i;998:53::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;998:53:26;;;;;;-1:-1:-1;;;;;10373:32:33;;;10355:51;;10343:2;10328:18;998:53:26;10209:203:33;22471:706:26;;;;;;:::i;:::-;;:::i;2857:231::-;;;;;;:::i;:::-;;:::i;14490:210::-;;;;;;:::i;:::-;;:::i;2563:290::-;;;;;;:::i;:::-;;:::i;17533:211::-;;;;;;:::i;:::-;;:::i;6801:541::-;;;;;;:::i;:::-;;:::i;1125:33::-;;;;;-1:-1:-1;;;;;1125:33:26;;;7584:228;;;;;;:::i;:::-;;:::i;8060:159::-;;;;;;:::i;:::-;;:::i;13490:224::-;;;;;;:::i;:::-;;:::i;18020:195::-;;;;;;:::i;:::-;;:::i;15945:209::-;;;;;;:::i;:::-;;:::i;25096:2775::-;;;;;;:::i;:::-;;:::i;:::-;;;;13833:14:33;;13826:22;13808:41;;13880:2;13865:18;;13858:34;;;;13781:18;25096:2775:26;13640:258:33;14017:206:26;;;;;;:::i;:::-;;:::i;20334:223::-;;;;;;:::i;:::-;;:::i;17051:209::-;;;;;;:::i;:::-;;:::i;19703:229::-;;;;;;:::i;:::-;;:::i;866:20::-;;;;;-1:-1:-1;;;;;866:20:26;;;19149:222;;;;;;:::i;:::-;;:::i;12931:206::-;13048:4;13067:65;13086:16;:7;13096:6;13086:16;:::i;:::-;13104:19;13125:6;13067:18;:65::i;:::-;13060:72;;12931:206;;;;;:::o;14970:192::-;15084:4;15103:54;15117:4;15123;15129:19;15150:6;15103:13;:54::i;2441:118::-;2071:5;;-1:-1:-1;;;;;2071:5:26;2057:10;:19;2049:58;;;;-1:-1:-1;;;2049:58:26;;;;;;;:::i;:::-;;;;;;;;;2499:6:::1;:16:::0;;;::::1;;-1:-1:-1::0;;;2499:16:26::1;-1:-1:-1::0;;;;2499:16:26;;::::1;;::::0;;2526:28:::1;::::0;::::1;::::0;::::1;::::0;2508:7;864:14:33;857:22;839:41;;827:2;812:18;;699:187;2526:28:26::1;;;;;;;;2441:118:::0;:::o;3092:206::-;2071:5;;-1:-1:-1;;;;;2071:5:26;2057:10;:19;2049:58;;;;-1:-1:-1;;;2049:58:26;;;;;;;:::i;:::-;-1:-1:-1;;;;;3176:27:26;::::1;3168:76;;;::::0;-1:-1:-1;;;3168:76:26;;14722:2:33;3168:76:26::1;::::0;::::1;14704:21:33::0;14761:2;14741:18;;;14734:30;14800:34;14780:18;;;14773:62;-1:-1:-1;;;14851:18:33;;;14844:34;14895:19;;3168:76:26::1;14520:400:33::0;3168:76:26::1;3250:12;:43:::0;;-1:-1:-1;;;;;;3250:43:26::1;-1:-1:-1::0;;;;;3250:43:26;;;::::1;::::0;;;::::1;::::0;;3092:206::o;3833:369::-;3952:34;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3952:34:26;3997:26;4027:15;:38;4066:22;;;;:6;:22;:::i;:::-;4090:27;;;;:6;:27;:::i;:::-;4027:91;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4027:91:26;;;;;;;;;;;;:::i;:::-;4140:57;;-1:-1:-1;;;4140:57:26;;3994:124;;-1:-1:-1;4140:15:26;;-1:-1:-1;4140:32:26;;:57;;3994:124;;4188:8;;4140:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4140:57:26;;;;;;;;;;;;:::i;:::-;4124:73;3833:369;-1:-1:-1;;;;3833:369:26:o;5263:169::-;5371:4;5390:37;5408:10;:6;5417:1;5408:10;:::i;:::-;5420:6;5390:17;:37::i;20967:230::-;21099:4;21118:74;21135:11;21148:35;21185:6;21118:16;:74::i;16515:227::-;16656:4;16675:62;16689:7;16698;16707:21;16730:6;16675:13;:62::i;:::-;16668:69;;16515:227;;;;;;:::o;15468:207::-;15593:4;15612:58;15631:7;15640:21;15663:6;15612:18;:58::i;4480:541::-;4595:4;;;;4653:15;:33;4687:22;;;;:6;:22;:::i;:::-;4711:27;;;;:6;:27;:::i;:::-;4653:86;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4607:132;;;;;;4753:66;4775:11;4788:6;:30;;;4753:21;:66::i;:::-;4745:154;;;;-1:-1:-1;;;4745:154:26;;;;;;;:::i;:::-;4913:8;;;;4905:85;;;;;-1:-1:-1;;;4905:85:26;;21776:2:33;4905:85:26;;;21758:21:33;21795:18;;;21788:30;;;;21854:34;21834:18;;;21827:62;21925:34;21905:18;;;21898:62;21977:19;;4905:85:26;21574:428:33;4905:85:26;-1:-1:-1;5003:13:26;;;;;;;;-1:-1:-1;;4480:541:26;;;;:::o;21363:347::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;21489:17:26;21509:15;:34;21544:22;;;;:6;:22;:::i;:::-;21568:27;;;;:6;:27;:::i;:::-;21509:87;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21509:87:26;;;;;;;;;;;;:::i;:::-;21671:34;;-1:-1:-1;;;21671:34:26;;21489:107;;-1:-1:-1;21671:15:26;;:28;;:34;;21489:107;;21671:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21671:34:26;;;;;;;;;;;;:::i;:::-;21647:20;;;21602:103;21628:17;;;21602:103;-1:-1:-1;;;;;21602:103:26;;;-1:-1:-1;21603:9:26;21363:347;-1:-1:-1;21363:347:26:o;5757:766::-;5885:4;;;;5943:15;:33;5977:22;;;;:6;:22;:::i;:::-;6001:27;;;;:6;:27;:::i;:::-;5943:86;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5897:132;;;;;;6043:66;6065:11;6078:6;:30;;;6043:21;:66::i;:::-;6035:154;;;;-1:-1:-1;;;6035:154:26;;;;;;;:::i;:::-;6213:6;6203:16;;:6;:16;;;;6195:74;;;;-1:-1:-1;;;6195:74:26;;23362:2:33;6195:74:26;;;23344:21:33;23401:2;23381:18;;;23374:30;23440:34;23420:18;;;23413:62;-1:-1:-1;;;23491:18:33;;;23484:43;23544:19;;6195:74:26;23160:409:33;6195:74:26;6283:3;:8;;6290:1;6283:8;6275:97;;;;-1:-1:-1;;;6275:97:26;;23776:2:33;6275:97:26;;;23758:21:33;23815:2;23795:18;;;23788:30;23854:34;23834:18;;;23827:62;23925:34;23905:18;;;23898:62;-1:-1:-1;;;23976:19:33;;;23969:43;24029:19;;6275:97:26;23574:480:33;6275:97:26;6386:3;:8;;6393:1;6386:8;6378:97;;;;-1:-1:-1;;;6378:97:26;;24261:2:33;6378:97:26;;;24243:21:33;24300:2;24280:18;;;24273:30;24339:34;24319:18;;;24312:62;24410:34;24390:18;;;24383:62;-1:-1:-1;;;24461:19:33;;;24454:43;24514:19;;6378:97:26;24059:480:33;6378:97:26;6498:3;6488:13;;:6;:13;;;:30;;;;;6515:3;6505:13;;:6;:13;;;6488:30;6481:37;5757:766;-1:-1:-1;;;;;;;5757:766:26:o;21861:271::-;21958:26;21987:15;:39;22027:22;;;;:6;:22;:::i;:::-;22051:27;;;;:6;:27;:::i;:::-;21987:92;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21958:121;;22085:42;22108:18;22085:22;:42::i;:::-;21952:180;21861:271;:::o;12463:204::-;12587:4;12606:56;12625:7;12634:19;12655:6;12606:18;:56::i;2208:229::-;2071:5;;-1:-1:-1;;;;;2071:5:26;2057:10;:19;2049:58;;;;-1:-1:-1;;;2049:58:26;;;;;;;:::i;:::-;-1:-1:-1;;;;;2282:22:26;::::1;2274:63;;;::::0;-1:-1:-1;;;2274:63:26;;24935:2:33;2274:63:26::1;::::0;::::1;24917:21:33::0;24974:2;24954:18;;;24947:30;25013;24993:18;;;24986:58;25061:18;;2274:63:26::1;24733:352:33::0;2274:63:26::1;2343:16;2362:5:::0;;-1:-1:-1;;;;;2373:16:26;;::::1;-1:-1:-1::0;;;;;;2373:16:26;::::1;::::0;::::1;::::0;;2400:32:::1;::::0;2362:5;;;::::1;::::0;;;2400:32:::1;::::0;2343:16;2400:32:::1;2268:169;2208:229:::0;:::o;22471:706::-;22610:4;22724:17;22744:27;22764:6;;22744:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22744:19:26;;-1:-1:-1;;;22744:27:26:i;:::-;:92;;22835:1;22799:32;22823:6;;22806:24;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;22806:24:26;;;;;;;;;;22799:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;22744:92;;;22788:1;22744:92;22724:112;;22936:20;22959:26;22979:5;;22959:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22959:19:26;;-1:-1:-1;;;22959:26:26:i;:::-;:90;;23048:1;23013:31;23037:5;;23020:23;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;23020:23:26;;;;;;;;;;23013:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;22959:90;;;23002:1;22959:90;22936:113;;23103:9;23062:12;;1073:1:19;23062:37:26;;;;;;;:::i;:::-;;;;;;;:50;:110;;;;;23160:12;23116;;1112:1:19;23116:40:26;;;;;;;:::i;:::-;;;;;;;:56;23062:110;23055:117;22471:706;-1:-1:-1;;;;;;;;;22471:706:26:o;2857:231::-;2071:5;;-1:-1:-1;;;;;2071:5:26;2057:10;:19;2049:58;;;;-1:-1:-1;;;2049:58:26;;;;;;;:::i;:::-;2943:9:::1;2938:146;2958:21:::0;;::::1;2938:146;;;3001:18;:33;3020:10;;3031:1;3020:13;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;::::1;;3001:33:::0;;-1:-1:-1;3001:33:26;::::1;::::0;;;;;;-1:-1:-1;3001:33:26;2994:40;;-1:-1:-1;;;;;;2994:40:26::1;::::0;;3063:10;;3074:1;3063:13;;::::1;;;;;:::i;:::-;;;;;;;3047:30;;;;;;;;;;2981:3;;2938:146;;;;2857:231:::0;;:::o;14490:210::-;14610:4;14629:66;14649:16;14659:6;14649:7;:16;:::i;:::-;14667:19;14688:6;14629:19;:66::i;2563:290::-;2071:5;;-1:-1:-1;;;;;2071:5:26;2057:10;:19;2049:58;;;;-1:-1:-1;;;2049:58:26;;;;;;;:::i;:::-;2688:9:::1;2683:166;2703:21:::0;;::::1;2683:166;;;2775:9;;2785:1;2775:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2739:18;:33;2758:10;;2769:1;2758:13;;;;;;;:::i;:::-;;;;;;;2739:33;;;;;;;;;;;;:48;;;;;-1:-1:-1::0;;;;;2739:48:26::1;;;;;-1:-1:-1::0;;;;;2739:48:26::1;;;;;;2829:9;;2839:1;2829:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2800:42:26::1;2814:10;;2825:1;2814:13;;;;;;;:::i;:::-;;;;;;;2800:42;;;;;;;;;;2726:3;;2683:166;;;;2563:290:::0;;;;:::o;17533:211::-;17652:4;17671:68;17691:16;17701:6;17691:7;:16;:::i;:::-;17709:21;17732:6;17671:19;:68::i;6801:541::-;6916:4;;;;6974:15;:33;7008:22;;;;:6;:22;:::i;:::-;7032:27;;;;:6;:27;:::i;:::-;6974:86;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6928:132;;;;;;7074:66;7096:11;7109:6;:30;;;7074:21;:66::i;:::-;7066:154;;;;-1:-1:-1;;;7066:154:26;;;;;;;:::i;:::-;7234:8;;;;7226:85;;;;;-1:-1:-1;;;7226:85:26;;26141:2:33;7226:85:26;;;26123:21:33;26160:18;;;26153:30;;;;26219:34;26199:18;;;26192:62;26290:34;26270:18;;;26263:62;26342:19;;7226:85:26;25939:428:33;7226:85:26;7324:13;;;;;;;;-1:-1:-1;;;6801:541:26;;;;:::o;7584:228::-;7692:4;7721:1;7712:6;:10;;;7704:53;;;;-1:-1:-1;;;7704:53:26;;26574:2:33;7704:53:26;;;26556:21:33;26613:2;26593:18;;;26586:30;26652:32;26632:18;;;26625:60;26702:18;;7704:53:26;26372:354:33;7704:53:26;7770:37;7788:10;7797:1;7788:6;:10;:::i;:::-;7800:6;7770:17;:37::i;8060:159::-;8165:4;8184:30;8197:3;8202;8207:6;8184:12;:30::i;13490:224::-;13630:4;13649:60;13663:7;13672;13681:19;13702:6;13649:13;:60::i;18020:195::-;18135:4;18154:56;18168:4;18174;18180:21;18203:6;18154:13;:56::i;15945:209::-;16063:4;16082:67;16101:16;:7;16111:6;16101:16;:::i;:::-;16119:21;16142:6;16082:18;:67::i;25096:2775::-;25203:12;2163:6;;25203:12;;-1:-1:-1;;;2163:6:26;;;;2162:7;2154:38;;;;-1:-1:-1;;;2154:38:26;;27089:2:33;2154:38:26;;;27071:21:33;27128:2;27108:18;;;27101:30;-1:-1:-1;;;27147:18:33;;;27140:48;27205:18;;2154:38:26;26887:342:33;2154:38:26;25326:16:::1;25345:29;25358:15:::0;::::1;25345:12;:29::i;:::-;25326:48:::0;-1:-1:-1;25423:90:26::1;25448:19;;::::0;::::1;:6:::0;:19:::1;:::i;:::-;942:1:19;25448:64:26;;;;;;;:::i;:::-;;;;;;;25423:24;:90::i;:::-;25558:82;25579:19;;::::0;::::1;:6:::0;:19:::1;:::i;:::-;994:1:19;25579:60:26;;;;;;;:::i;:::-;;;;;;;25558:20;:82::i;:::-;25698:62;25708:19;;::::0;::::1;:6:::0;:19:::1;:::i;:::-;25698:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;;25729:30:26::1;::::0;::::1;;25698:9;:62::i;:::-;25683:144;;;::::0;-1:-1:-1;;;25683:144:26;;27986:2:33;25683:144:26::1;::::0;::::1;27968:21:33::0;28025:2;28005:18;;;27998:30;28064:34;28044:18;;;28037:62;-1:-1:-1;;;28115:18:33;;;28108:49;28174:19;;25683:144:26::1;27784:415:33::0;25683:144:26::1;26171:62;26184:19;;::::0;::::1;:6:::0;:19:::1;:::i;:::-;26205:13;;::::0;::::1;:6:::0;:13:::1;:::i;:::-;26220:12;;::::0;::::1;:6:::0;:12:::1;:::i;26171:62::-;26163:98;;;::::0;-1:-1:-1;;;26163:98:26;;28933:2:33;26163:98:26::1;::::0;::::1;28915:21:33::0;28972:2;28952:18;;;28945:30;29011:25;28991:18;;;28984:53;29054:18;;26163:98:26::1;28731:347:33::0;26163:98:26::1;26329:244;26415:19;;::::0;::::1;:6:::0;:19:::1;:::i;:::-;1160:1:19;::::0;26500::26::1;26471:19;;::::0;::::1;:6:::0;:19:::1;:::i;:::-;:30;::::0;;-1:-1:-1;26471:30:26::1;:::i;:::-;26415:87;;;;;;;:::i;:::-;26329:244;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;26510:22:26::1;::::0;-1:-1:-1;;;26510:22:26::1;::::0;::::1;::::0;::::1;:::i;:::-;26540:27;;::::0;::::1;:6:::0;:27:::1;:::i;:::-;26329:244;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;26329:21:26::1;::::0;-1:-1:-1;;;26329:244:26:i:1;:::-;26962:1;26891:19;;::::0;::::1;:6:::0;:19:::1;:::i;:::-;26940:1;26911:19;;::::0;::::1;:6:::0;:19:::1;:::i;:::-;:30;::::0;;-1:-1:-1;26911:30:26::1;:::i;:::-;26891:51;;;;;;;:::i;:::-;;;;;;;:74;;:92;;;-1:-1:-1::0;26969:14:26::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;26876:163;;;::::0;-1:-1:-1;;;26876:163:26;;29645:2:33;26876:163:26::1;::::0;::::1;29627:21:33::0;29684:2;29664:18;;;29657:30;29723:34;29703:18;;;29696:62;-1:-1:-1;;;29774:18:33;;;29767:38;29822:19;;26876:163:26::1;29443:404:33::0;26876:163:26::1;1299:1:19;27257:19:26;;::::0;::::1;:6:::0;:19:::1;:::i;:::-;:86;::::0;;-1:-1:-1;27257:86:26::1;:::i;:::-;27219:27;;::::0;::::1;:6:::0;:27:::1;:::i;:::-;:34;;:124;27211:174;;;::::0;-1:-1:-1;;;27211:174:26;;30054:2:33;27211:174:26::1;::::0;::::1;30036:21:33::0;30093:2;30073:18;;;30066:30;30132:34;30112:18;;;30105:62;-1:-1:-1;;;30183:18:33;;;30176:35;30228:19;;27211:174:26::1;29852:401:33::0;27211:174:26::1;-1:-1:-1::0;;;;;27504:26:26;::::1;;27531:12;;::::0;::::1;:6:::0;:12:::1;:::i;:::-;27545:19;;::::0;::::1;:6:::0;:19:::1;:::i;:::-;27504:61;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27494:71:::0;-1:-1:-1;27628:29:26::1;27689:1;27660:19;;::::0;::::1;:6:::0;:19:::1;:::i;:::-;:30;::::0;;-1:-1:-1;27660:30:26::1;:::i;:::-;27628:62:::0;-1:-1:-1;27715:19:26::1;;::::0;::::1;:6:::0;:19:::1;:::i;:::-;27735:21;27715:42;;;;;;;:::i;:::-;;;;;;;27696:61;;27832:34;;25096:2775:::0;;;:::o;14017:206::-;14142:4;14161:57;14181:7;14190:19;14211:6;14161:19;:57::i;20334:223::-;20463:4;20482:70;20499:11;20512:31;20545:6;20482:16;:70::i;17051:209::-;17177:4;17196:59;17216:7;17225:21;17248:6;17196:19;:59::i;19703:229::-;19834:4;19853:74;19870:11;19883:35;19920:6;19853:16;:74::i;19149:222::-;19277:4;19296:70;19313:11;19326:31;19359:6;19296:16;:70::i;8223:1133::-;8368:4;;;;8430:15;:34;8465:22;;;;:6;:22;:::i;:::-;8489:27;;;;:6;:27;:::i;:::-;8518:9;8430:98;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8380:148;;;;;;8542:66;8564:11;8577:6;:30;;;8542:21;:66::i;:::-;8534:154;;;;-1:-1:-1;;;8534:154:26;;;;;;;:::i;:::-;8715:19;8702:9;:32;;;;;;;;:::i;:::-;;:70;;;-1:-1:-1;8751:21:26;8738:9;:34;;;;;;;;:::i;:::-;;8702:70;8694:101;;;;-1:-1:-1;;;8694:101:26;;;;;;;:::i;:::-;8818:19;8805:9;:32;;;;;;;;:::i;:::-;;8801:551;;8855:8;;8847:91;;;;-1:-1:-1;;;8847:91:26;;32856:2:33;8847:91:26;;;32838:21:33;32895:2;32875:18;;;32868:30;32934:34;32914:18;;;32907:62;33005:34;32985:18;;;32978:62;-1:-1:-1;;;33056:19:33;;;33049:37;33103:19;;8847:91:26;32654:474:33;8847:91:26;9168:35;144:10:19;9168:3:26;:35;:::i;:::-;9157:7;:46;9150:53;;;;;;;8801:551;9232:8;;9224:92;;;;-1:-1:-1;;;9224:92:26;;33335:2:33;9224:92:26;;;33317:21:33;33374:2;33354:18;;;33347:30;33413:34;33393:18;;;33386:62;33484:34;33464:18;;;33457:62;-1:-1:-1;;;33535:19:33;;;33528:38;33583:19;;9224:92:26;33133:475:33;9224:92:26;-1:-1:-1;9331:14:26;;;-1:-1:-1;9324:21:26;;-1:-1:-1;9324:21:26;9360:1549;9521:4;;;;9583:15;:34;9618:22;;;;:6;:22;:::i;:::-;9642:27;;;;:6;:27;:::i;:::-;9671:9;9583:98;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9533:148;;;;;;9695:66;9717:11;9730:6;:30;;;9695:21;:66::i;:::-;9687:154;;;;-1:-1:-1;;;9687:154:26;;;;;;;:::i;:::-;9866:7;9855;:18;;9847:78;;;;-1:-1:-1;;;9847:78:26;;33815:2:33;9847:78:26;;;33797:21:33;33854:2;33834:18;;;33827:30;33893:34;33873:18;;;33866:62;-1:-1:-1;;;33944:18:33;;;33937:45;33999:19;;9847:78:26;33613:411:33;9847:78:26;9952:19;9939:9;:32;;;;;;;;:::i;:::-;;:70;;;-1:-1:-1;9988:21:26;9975:9;:34;;;;;;;;:::i;:::-;;9939:70;9931:101;;;;-1:-1:-1;;;9931:101:26;;;;;;;:::i;:::-;10055:19;10042:9;:32;;;;;;;;:::i;:::-;;10038:867;;10092:3;10099:1;10092:8;10084:103;;;;-1:-1:-1;;;10084:103:26;;34231:2:33;10084:103:26;;;34213:21:33;34270:2;34250:18;;;34243:30;34309:34;34289:18;;;34282:62;34380:34;34360:18;;;34353:62;-1:-1:-1;;;34431:19:33;;;34424:49;34490:19;;10084:103:26;34029:486:33;10084:103:26;10203:3;10210:1;10203:8;10195:103;;;;-1:-1:-1;;;10195:103:26;;;;;;;:::i;:::-;10529:35;144:10:19;10529:3:26;:35;:::i;:::-;10518:7;:46;:96;;;;-1:-1:-1;10579:35:26;144:10:19;10579:3:26;:35;:::i;:::-;10568:7;:46;10518:96;10511:103;;;;;;;10038:867;10643:3;10650:1;10643:8;10635:104;;;;-1:-1:-1;;;10635:104:26;;35213:2:33;10635:104:26;;;35195:21:33;35252:2;35232:18;;;35225:30;35291:34;35271:18;;;35264:62;35362:34;35342:18;;;35335:62;-1:-1:-1;;;35413:19:33;;;35406:50;35473:19;;10635:104:26;35011:487:33;10635:104:26;10755:3;10762:1;10755:8;10747:104;;;;-1:-1:-1;;;10747:104:26;;;;;;;:::i;:::-;10877:3;10866:7;:14;:32;;;;-1:-1:-1;10884:14:26;;;;9360:1549;-1:-1:-1;;;;;;9360:1549:26:o;18219:606::-;18374:4;;;18455:15;:37;18493:22;;;;:6;:22;:::i;:::-;18517:27;;;;:6;:27;:::i;:::-;18546:9;18455:101;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18455:101:26;;;;;;;;;;;;:::i;:::-;18386:170;;;;18588:22;18566:11;:18;:44;18562:77;;18627:5;18620:12;;;;;;18562:77;18649:9;18644:160;18668:22;18664:1;:26;18644:160;;;18710:55;18729:11;18741:1;18729:14;;;;;;;;:::i;:::-;;;;;;;18745:16;18762:1;18745:19;;;;;;;;:::i;:::-;;;;;;;234::24;;;;;;;211;;;;;;;;;;:42;;119:139;18710:55:26;18705:93;;18784:5;18777:12;;;;;;;18705:93;18692:3;;18644:160;;;-1:-1:-1;18816:4:26;;18219:606;-1:-1:-1;;;;;;18219:606:26:o;392:337:20:-;500:4;;546:35;558:23;546:9;:35;:::i;:::-;512:69;;619:9;600:15;:28;;:73;;;;;664:9;638:23;:35;600:73;:124;;;;-1:-1:-1;709:15:20;-1:-1:-1;683:41:20;392:337;-1:-1:-1;;;392:337:20:o;24599:204:26:-;24689:12;;:62;;-1:-1:-1;;;24689:62:26;;858:1;24689:62;;;37347:25:33;37388:18;;;37381:34;;;-1:-1:-1;;;;;24689:12:26;;;;:24;;37320:18:33;;24689:62:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24674:124;;;;-1:-1:-1;;;24674:124:26;;37628:2:33;24674:124:26;;;37610:21:33;37667:2;37647:18;;;37640:30;37706:33;37686:18;;;37679:61;37757:18;;24674:124:26;37426:355:33;24674:124:26;24599:204;:::o;262:101:24:-;338:15;:20;;262:101::o;10913:1250:26:-;11059:4;;;;11121:15;:34;11156:22;;;;:6;:22;:::i;:::-;11180:27;;;;:6;:27;:::i;:::-;11209:9;11121:98;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11071:148;;;;;;11233:66;11255:11;11268:6;:30;;;11233:21;:66::i;:::-;11225:154;;;;-1:-1:-1;;;11225:154:26;;;;;;;:::i;:::-;11393:8;;11385:86;;;;-1:-1:-1;;;11385:86:26;;37988:2:33;11385:86:26;;;37970:21:33;38027:2;38007:18;;;38000:30;38066:34;38046:18;;;38039:62;38137:34;38117:18;;;38110:62;-1:-1:-1;;;38188:19:33;;;38181:32;38230:19;;11385:86:26;37786:469:33;11385:86:26;11498:19;11485:9;:32;;;;;;;;:::i;:::-;;:70;;;-1:-1:-1;11534:21:26;11521:9;:34;;;;;;;;:::i;:::-;;11485:70;11477:101;;;;-1:-1:-1;;;11477:101:26;;;;;;;:::i;:::-;11601:19;11588:9;:32;;;;;;;;:::i;:::-;;11584:575;;11638:3;11645:1;11638:8;11630:103;;;;-1:-1:-1;;;11630:103:26;;;;;;;:::i;:::-;11963:35;144:10:19;11963:3:26;:35;:::i;11584:575::-;12027:3;12034:1;12027:8;12019:104;;;;-1:-1:-1;;;12019:104:26;;;;;;;:::i;:::-;12138:14;;;-1:-1:-1;12131:21:26;;-1:-1:-1;;12131:21:26;23969:210;24032:7;24066:28;;;:18;:28;;;;;;-1:-1:-1;;;;;24066:28:26;;24100:53;;;;-1:-1:-1;;;24100:53:26;;38462:2:33;24100:53:26;;;38444:21:33;38501:2;38481:18;;;38474:30;-1:-1:-1;;;38520:18:33;;;38513:48;38578:18;;24100:53:26;38260:342:33;24183:214:26;24277:12;;:66;;-1:-1:-1;;;24277:66:26;;:12;:66;;;37347:25:33;37388:18;;;37381:34;;;-1:-1:-1;;;;;24277:12:26;;;;:24;;37320:18:33;;24277:66:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24262:130;;;;-1:-1:-1;;;24262:130:26;;38809:2:33;24262:130:26;;;38791:21:33;38848:2;38828:18;;;38821:30;38887:34;38867:18;;;38860:62;-1:-1:-1;;;38938:18:33;;;38931:31;38979:19;;24262:130:26;38607:397:33;24401:194:26;24487:12;;;:58;;-1:-1:-1;;;24487:58:26;;;;;37347:25:33;;;;37388:18;;;37381:34;;;-1:-1:-1;;;;;24487:12:26;;:24;;37320:18:33;;24487:58:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24472:118;;;;-1:-1:-1;;;24472:118:26;;39211:2:33;24472:118:26;;;39193:21:33;39250:2;39230:18;;;39223:30;39289:31;39269:18;;;39262:59;39338:18;;24472:118:26;39009:353:33;3302:300:26;3420:4;3432:28;3471:12;1037:1:19;3471:44:26;;;;;;;;:::i;:::-;;;;;;;3463:53;;3432:84;;3529:68;3551:20;3573:23;3529:21;:68::i;23181:784::-;23354:14;;23378:410;23402:20;:27;23398:1;:31;23378:410;;;23524:28;23657:1;23555:98;23588:15;;23604:6;23588:56;23620:20;23641:1;23620:23;;;;;;;;:::i;:::-;;;;;;;23611:6;:32;;;;:::i;:::-;23588:56;;;;;;;:::i;:::-;23571:74;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;23571:74:26;;;;;;;;;;23555:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:103;;23524:134;;23698:16;23715:1;23698:19;;;;;;;;:::i;:::-;;;;;;;23674:20;:43;23666:74;;;;-1:-1:-1;;;23666:74:26;;40187:2:33;23666:74:26;;;40169:21:33;40226:2;40206:18;;;40199:30;-1:-1:-1;;;40245:18:33;;;40238:48;40303:18;;23666:74:26;39985:342:33;23666:74:26;23758:20;23779:1;23758:23;;;;;;;;:::i;:::-;;;;;;;23748:33;;;;;:::i;:::-;;-1:-1:-1;;23431:3:26;;23378:410;;;-1:-1:-1;23892:32:26;;;23884:76;;;;-1:-1:-1;;;23884:76:26;;40534:2:33;23884:76:26;;;40516:21:33;40573:2;40553:18;;;40546:30;40612:33;40592:18;;;40585:61;40663:18;;23884:76:26;40332:355:33;14:172;90:5;135:3;126:6;121:3;117:16;113:26;110:46;;;152:1;149;142:12;110:46;-1:-1:-1;174:6:33;14:172;-1:-1:-1;14:172:33:o;191:503::-;303:6;311;364:2;352:9;343:7;339:23;335:32;332:52;;;380:1;377;370:12;332:52;425:23;;;-1:-1:-1;523:2:33;508:18;;495:32;-1:-1:-1;;;;;539:30:33;;536:50;;;582:1;579;572:12;536:50;605:83;680:7;671:6;660:9;656:22;605:83;:::i;:::-;595:93;;;191:503;;;;;:::o;891:118::-;977:5;970:13;963:21;956:5;953:32;943:60;;999:1;996;989:12;1014:241;1070:6;1123:2;1111:9;1102:7;1098:23;1094:32;1091:52;;;1139:1;1136;1129:12;1091:52;1178:9;1165:23;1197:28;1219:5;1197:28;:::i;1260:131::-;-1:-1:-1;;;;;1335:31:33;;1325:42;;1315:70;;1381:1;1378;1371:12;1396:247;1455:6;1508:2;1496:9;1487:7;1483:23;1479:32;1476:52;;;1524:1;1521;1514:12;1476:52;1563:9;1550:23;1582:31;1607:5;1582:31;:::i;1648:518::-;1757:6;1765;1818:2;1806:9;1797:7;1793:23;1789:32;1786:52;;;1834:1;1831;1824:12;1786:52;1874:9;1861:23;-1:-1:-1;;;;;1899:6:33;1896:30;1893:50;;;1939:1;1936;1929:12;1893:50;1962:83;2037:7;2028:6;2017:9;2013:22;1962:83;:::i;:::-;1952:93;;;2095:2;2084:9;2080:18;2067:32;2108:28;2130:5;2108:28;:::i;:::-;2155:5;2145:15;;;1648:518;;;;;:::o;2171:289::-;2213:3;2251:5;2245:12;2278:6;2273:3;2266:19;2334:6;2327:4;2320:5;2316:16;2309:4;2304:3;2300:14;2294:47;2386:1;2379:4;2370:6;2365:3;2361:16;2357:27;2350:38;2449:4;2442:2;2438:7;2433:2;2425:6;2421:15;2417:29;2412:3;2408:39;2404:50;2397:57;;;2171:289;;;;:::o;2465:1698::-;2658:2;2647:9;2640:21;2621:4;2696:6;2690:13;2739:6;2734:2;2723:9;2719:18;2712:34;2769:52;2816:3;2805:9;2801:19;2787:12;2769:52;:::i;:::-;2755:66;;2870:2;2862:6;2858:15;2852:22;2942:2;2938:7;2926:9;2918:6;2914:22;2910:36;2905:2;2894:9;2890:18;2883:64;2970:41;3004:6;2988:14;2970:41;:::i;:::-;2956:55;;;3060:2;3052:6;3048:15;3042:22;3132:2;3128:7;3116:9;3108:6;3104:22;3100:36;3095:2;3084:9;3080:18;3073:64;3160:41;3194:6;3178:14;3160:41;:::i;:::-;3146:55;;;3250:2;3242:6;3238:15;3232:22;3323:2;3319:7;3307:9;3299:6;3295:22;3291:36;3285:3;3274:9;3270:19;3263:65;3351:41;3385:6;3369:14;3351:41;:::i;:::-;3337:55;;;3441:3;3433:6;3429:16;3423:23;3515:2;3511:7;3499:9;3491:6;3487:22;3483:36;3477:3;3466:9;3462:19;3455:65;3543:41;3577:6;3561:14;3543:41;:::i;:::-;3529:55;;;3633:3;3625:6;3621:16;3615:23;3707:2;3703:7;3691:9;3683:6;3679:22;3675:36;3669:3;3658:9;3654:19;3647:65;3735:41;3769:6;3753:14;3735:41;:::i;:::-;3721:55;;;3825:3;3817:6;3813:16;3807:23;3899:2;3895:7;3883:9;3875:6;3871:22;3867:36;3861:3;3850:9;3846:19;3839:65;3927:41;3961:6;3945:14;3927:41;:::i;:::-;3913:55;;;4017:3;4009:6;4005:16;3999:23;4094:2;4090:7;4078:9;4070:6;4066:22;4062:36;4053:6;4042:9;4038:22;4031:68;4116:41;4150:6;4134:14;4116:41;:::i;:::-;4108:49;2465:1698;-1:-1:-1;;;;;2465:1698:33:o;4168:114::-;4252:4;4245:5;4241:16;4234:5;4231:27;4221:55;;4272:1;4269;4262:12;4287:520;4397:6;4405;4458:2;4446:9;4437:7;4433:23;4429:32;4426:52;;;4474:1;4471;4464:12;4426:52;4513:9;4500:23;4532:29;4555:5;4532:29;:::i;:::-;4580:5;-1:-1:-1;4636:2:33;4621:18;;4608:32;-1:-1:-1;;;;;4652:30:33;;4649:50;;;4695:1;4692;4685:12;4812:127;4873:10;4868:3;4864:20;4861:1;4854:31;4904:4;4901:1;4894:15;4928:4;4925:1;4918:15;4944:255;5016:2;5010:9;5058:6;5046:19;;-1:-1:-1;;;;;5080:34:33;;5116:22;;;5077:62;5074:88;;;5142:18;;:::i;:::-;5178:2;5171:22;4944:255;:::o;5204:275::-;5275:2;5269:9;5340:2;5321:13;;-1:-1:-1;;5317:27:33;5305:40;;-1:-1:-1;;;;;5360:34:33;;5396:22;;;5357:62;5354:88;;;5422:18;;:::i;:::-;5458:2;5451:22;5204:275;;-1:-1:-1;5204:275:33:o;5484:182::-;5543:4;-1:-1:-1;;;;;5568:6:33;5565:30;5562:56;;;5598:18;;:::i;:::-;-1:-1:-1;5643:1:33;5639:14;5655:4;5635:25;;5484:182::o;5671:187::-;5720:4;-1:-1:-1;;;;;5745:6:33;5742:30;5739:56;;;5775:18;;:::i;:::-;-1:-1:-1;5841:2:33;5820:15;-1:-1:-1;;5816:29:33;5847:4;5812:40;;5671:187::o;5863:1793::-;6010:6;6018;6071:2;6059:9;6050:7;6046:23;6042:32;6039:52;;;6087:1;6084;6077:12;6039:52;6127:9;6114:23;-1:-1:-1;;;;;6152:6:33;6149:30;6146:50;;;6192:1;6189;6182:12;6146:50;6215:22;;6268:4;6260:13;;6256:27;-1:-1:-1;6246:55:33;;6297:1;6294;6287:12;6246:55;6337:2;6324:16;6360:63;6376:46;6415:6;6376:46;:::i;:::-;6360:63;:::i;:::-;6445:3;6469:6;6464:3;6457:19;6501:4;6496:3;6492:14;6485:21;;6558:4;6548:6;6545:1;6541:14;6537:2;6533:23;6529:34;6515:48;;6586:7;6578:6;6575:19;6572:39;;;6607:1;6604;6597:12;6572:39;6639:4;6635:2;6631:13;6653:749;6669:6;6664:3;6661:15;6653:749;;;6757:3;6744:17;-1:-1:-1;;;;;6780:11:33;6777:35;6774:55;;;6825:1;6822;6815:12;6774:55;6852:20;;6907:2;6899:11;;6895:25;-1:-1:-1;6885:53:33;;6934:1;6931;6924:12;6885:53;6988:4;6984:2;6980:13;6967:27;7022:55;7038:38;7067:8;7038:38;:::i;7022:55::-;7090:25;;;7134:39;7142:17;;;7134:39;7131:52;-1:-1:-1;7128:72:33;;;7196:1;7193;7186:12;7128:72;7259:8;7254:2;7250;7246:11;7239:4;7230:7;7226:18;7213:55;7323:1;7316:4;7305:8;7296:7;7292:22;7288:33;7281:44;7350:7;7345:3;7338:20;;;;7387:4;7382:3;7378:14;7371:21;;6695:4;6690:3;6686:14;6679:21;;6653:749;;;-1:-1:-1;7421:5:33;-1:-1:-1;;;;7479:4:33;7464:20;;7451:34;-1:-1:-1;;;;;7497:32:33;;7494:52;;;7542:1;7539;7532:12;7843:623;7964:6;7972;7980;8033:2;8021:9;8012:7;8008:23;8004:32;8001:52;;;8049:1;8046;8039:12;8001:52;8094:23;;;-1:-1:-1;8214:2:33;8199:18;;8186:32;;-1:-1:-1;8295:2:33;8280:18;;8267:32;-1:-1:-1;;;;;8311:30:33;;8308:50;;;8354:1;8351;8344:12;8308:50;8377:83;8452:7;8443:6;8432:9;8428:22;8377:83;:::i;:::-;8367:93;;;7843:623;;;;;:::o;8471:389::-;8574:6;8627:2;8615:9;8606:7;8602:23;8598:32;8595:52;;;8643:1;8640;8633:12;8595:52;8683:9;8670:23;-1:-1:-1;;;;;8708:6:33;8705:30;8702:50;;;8748:1;8745;8738:12;8702:50;8771:83;8846:7;8837:6;8826:9;8822:22;8771:83;:::i;8865:492::-;9050:2;9039:9;9032:21;9125:1;9121;9116:3;9112:11;9108:19;9099:6;9093:13;9089:39;9084:2;9073:9;9069:18;9062:67;9183:2;9175:6;9171:15;9165:22;9160:2;9149:9;9145:18;9138:50;9013:4;9235:2;9227:6;9223:15;9217:22;9277:4;9270;9259:9;9255:20;9248:34;9299:52;9346:3;9335:9;9331:19;9317:12;9299:52;:::i;9362:657::-;9479:6;9487;9495;9548:2;9536:9;9527:7;9523:23;9519:32;9516:52;;;9564:1;9561;9554:12;9516:52;9603:9;9590:23;9622:29;9645:5;9622:29;:::i;:::-;9670:5;-1:-1:-1;9727:2:33;9712:18;;9699:32;9740:31;9699:32;9740:31;:::i;:::-;9790:7;-1:-1:-1;9848:2:33;9833:18;;9820:32;-1:-1:-1;;;;;9864:30:33;;9861:50;;;9907:1;9904;9897:12;10024:180;10083:6;10136:2;10124:9;10115:7;10111:23;10107:32;10104:52;;;10152:1;10149;10142:12;10104:52;-1:-1:-1;10175:23:33;;10024:180;-1:-1:-1;10024:180:33:o;10417:367::-;10480:8;10490:6;10544:3;10537:4;10529:6;10525:17;10521:27;10511:55;;10562:1;10559;10552:12;10511:55;-1:-1:-1;10585:20:33;;-1:-1:-1;;;;;10617:30:33;;10614:50;;;10660:1;10657;10650:12;10614:50;10697:4;10689:6;10685:17;10673:29;;10757:3;10750:4;10740:6;10737:1;10733:14;10725:6;10721:27;10717:38;10714:47;10711:67;;;10774:1;10771;10764:12;10711:67;10417:367;;;;;:::o;10789:348::-;10841:8;10851:6;10905:3;10898:4;10890:6;10886:17;10882:27;10872:55;;10923:1;10920;10913:12;10872:55;-1:-1:-1;10946:20:33;;-1:-1:-1;;;;;10978:30:33;;10975:50;;;11021:1;11018;11011:12;10975:50;11058:4;11050:6;11046:17;11034:29;;11110:3;11103:4;11094:6;11086;11082:19;11078:30;11075:39;11072:59;;;11127:1;11124;11117:12;11142:1047;11270:6;11278;11286;11294;11302;11310;11363:2;11351:9;11342:7;11338:23;11334:32;11331:52;;;11379:1;11376;11369:12;11331:52;11419:9;11406:23;-1:-1:-1;;;;;11444:6:33;11441:30;11438:50;;;11484:1;11481;11474:12;11438:50;11523:70;11585:7;11576:6;11565:9;11561:22;11523:70;:::i;:::-;11612:8;;-1:-1:-1;11497:96:33;-1:-1:-1;;11700:2:33;11685:18;;11672:32;-1:-1:-1;;;;;11716:32:33;;11713:52;;;11761:1;11758;11751:12;11713:52;11800:61;11853:7;11842:8;11831:9;11827:24;11800:61;:::i;:::-;11880:8;;-1:-1:-1;11774:87:33;-1:-1:-1;;11968:2:33;11953:18;;11940:32;-1:-1:-1;;;;;11984:32:33;;11981:52;;;12029:1;12026;12019:12;11981:52;12068:61;12121:7;12110:8;12099:9;12095:24;12068:61;:::i;:::-;11142:1047;;;;-1:-1:-1;11142:1047:33;;-1:-1:-1;11142:1047:33;;12148:8;;11142:1047;-1:-1:-1;;;11142:1047:33:o;12194:437::-;12280:6;12288;12341:2;12329:9;12320:7;12316:23;12312:32;12309:52;;;12357:1;12354;12347:12;12309:52;12397:9;12384:23;-1:-1:-1;;;;;12422:6:33;12419:30;12416:50;;;12462:1;12459;12452:12;12416:50;12501:70;12563:7;12554:6;12543:9;12539:22;12501:70;:::i;:::-;12590:8;;12475:96;;-1:-1:-1;12194:437:33;-1:-1:-1;;;;12194:437:33:o;12636:768::-;12758:6;12766;12774;12782;12835:2;12823:9;12814:7;12810:23;12806:32;12803:52;;;12851:1;12848;12841:12;12803:52;12891:9;12878:23;-1:-1:-1;;;;;12916:6:33;12913:30;12910:50;;;12956:1;12953;12946:12;12910:50;12995:70;13057:7;13048:6;13037:9;13033:22;12995:70;:::i;:::-;13084:8;;-1:-1:-1;12969:96:33;-1:-1:-1;;13172:2:33;13157:18;;13144:32;-1:-1:-1;;;;;13188:32:33;;13185:52;;;13233:1;13230;13223:12;13185:52;13272:72;13336:7;13325:8;13314:9;13310:24;13272:72;:::i;:::-;12636:768;;;;-1:-1:-1;13363:8:33;-1:-1:-1;;;;12636:768:33:o;13903:127::-;13964:10;13959:3;13955:20;13952:1;13945:31;13995:4;13992:1;13985:15;14019:4;14016:1;14009:15;14035:125;14100:9;;;14121:10;;;14118:36;;;14134:18;;:::i;14165:350::-;14367:2;14349:21;;;14406:2;14386:18;;;14379:30;14445:28;14440:2;14425:18;;14418:56;14506:2;14491:18;;14165:350::o;14925:521::-;15002:4;15008:6;15068:11;15055:25;15162:2;15158:7;15147:8;15131:14;15127:29;15123:43;15103:18;15099:68;15089:96;;15181:1;15178;15171:12;15089:96;15208:33;;15260:20;;;-1:-1:-1;;;;;;15292:30:33;;15289:50;;;15335:1;15332;15325:12;15289:50;15368:4;15356:17;;-1:-1:-1;15399:14:33;15395:27;;;15385:38;;15382:58;;;15436:1;15433;15426:12;15451:545;15544:4;15550:6;15610:11;15597:25;15704:2;15700:7;15689:8;15673:14;15669:29;15665:43;15645:18;15641:68;15631:96;;15723:1;15720;15713:12;15631:96;15750:33;;15802:20;;;-1:-1:-1;;;;;;15834:30:33;;15831:50;;;15877:1;15874;15867:12;15831:50;15910:4;15898:17;;-1:-1:-1;15961:1:33;15957:14;;;15941;15937:35;15927:46;;15924:66;;;15986:1;15983;15976:12;16001:266;16089:6;16084:3;16077:19;16141:6;16134:5;16127:4;16122:3;16118:14;16105:43;-1:-1:-1;16193:1:33;16168:16;;;16186:4;16164:27;;;16157:38;;;;16249:2;16228:15;;;-1:-1:-1;;16224:29:33;16215:39;;;16211:50;;16001:266::o;16272:311::-;16360:19;;;16342:3;-1:-1:-1;;;;;16391:31:33;;16388:51;;;16435:1;16432;16425:12;16388:51;16471:6;16468:1;16464:14;16523:8;16516:5;16509:4;16504:3;16500:14;16487:45;16552:18;;;;16572:4;16548:29;;16272:311;-1:-1:-1;;;16272:311:33:o;16588:483::-;16841:2;16830:9;16823:21;16804:4;16867:61;16924:2;16913:9;16909:18;16901:6;16893;16867:61;:::i;:::-;16976:9;16968:6;16964:22;16959:2;16948:9;16944:18;16937:50;17004:61;17058:6;17050;17042;17004:61;:::i;17076:514::-;17129:5;17182:3;17175:4;17167:6;17163:17;17159:27;17149:55;;17200:1;17197;17190:12;17149:55;17233:6;17227:13;17272:4;17264:6;17260:17;17301:1;17322:53;17338:36;17367:6;17338:36;:::i;17322:53::-;17311:64;;17400:6;17391:7;17384:23;17440:3;17431:6;17426:3;17422:16;17419:25;17416:45;;;17457:1;17454;17447:12;17416:45;17501:6;17496:3;17489:4;17480:7;17476:18;17470:38;17557:1;17528:20;;;17550:4;17524:31;17517:42;;;;-1:-1:-1;17532:7:33;17076:514;-1:-1:-1;;;17076:514:33:o;17595:553::-;17692:6;17700;17753:2;17741:9;17732:7;17728:23;17724:32;17721:52;;;17769:1;17766;17759:12;17721:52;17802:9;17796:16;-1:-1:-1;;;;;17827:6:33;17824:30;17821:50;;;17867:1;17864;17857:12;17821:50;17890:60;17942:7;17933:6;17922:9;17918:22;17890:60;:::i;:::-;17880:70;;;17996:2;17985:9;17981:18;17975:25;-1:-1:-1;;;;;18015:8:33;18012:32;18009:52;;;18057:1;18054;18047:12;18009:52;18080:62;18134:7;18123:8;18112:9;18108:24;18080:62;:::i;18153:307::-;18330:2;18319:9;18312:21;18293:4;18350:45;18391:2;18380:9;18376:18;18368:6;18350:45;:::i;:::-;18342:53;;18445:6;18438:14;18431:22;18426:2;18415:9;18411:18;18404:50;18153:307;;;;;:::o;18465:1972::-;18567:6;18620:2;18608:9;18599:7;18595:23;18591:32;18588:52;;;18636:1;18633;18626:12;18588:52;18669:9;18663:16;-1:-1:-1;;;;;18694:6:33;18691:30;18688:50;;;18734:1;18731;18724:12;18688:50;18757:22;;18813:6;18795:16;;;18791:29;18788:49;;;18833:1;18830;18823:12;18788:49;18859:22;;:::i;:::-;18912:2;18906:9;-1:-1:-1;;;;;18930:8:33;18927:32;18924:52;;;18972:1;18969;18962:12;18924:52;18999:55;19046:7;19035:8;19031:2;19027:17;18999:55;:::i;:::-;18992:5;18985:70;;19094:2;19090;19086:11;19080:18;-1:-1:-1;;;;;19113:8:33;19110:32;19107:52;;;19155:1;19152;19145:12;19107:52;19191:55;19238:7;19227:8;19223:2;19219:17;19191:55;:::i;:::-;19186:2;19179:5;19175:14;19168:79;;19286:2;19282;19278:11;19272:18;-1:-1:-1;;;;;19305:8:33;19302:32;19299:52;;;19347:1;19344;19337:12;19299:52;19383:55;19430:7;19419:8;19415:2;19411:17;19383:55;:::i;:::-;19378:2;19371:5;19367:14;19360:79;;19478:2;19474;19470:11;19464:18;-1:-1:-1;;;;;19497:8:33;19494:32;19491:52;;;19539:1;19536;19529:12;19491:52;19575:55;19622:7;19611:8;19607:2;19603:17;19575:55;:::i;:::-;19570:2;19563:5;19559:14;19552:79;;19670:3;19666:2;19662:12;19656:19;-1:-1:-1;;;;;19690:8:33;19687:32;19684:52;;;19732:1;19729;19722:12;19684:52;19769:55;19816:7;19805:8;19801:2;19797:17;19769:55;:::i;:::-;19763:3;19756:5;19752:15;19745:80;;19864:3;19860:2;19856:12;19850:19;-1:-1:-1;;;;;19884:8:33;19881:32;19878:52;;;19926:1;19923;19916:12;19878:52;19963:55;20010:7;19999:8;19995:2;19991:17;19963:55;:::i;:::-;19957:3;19950:5;19946:15;19939:80;;20058:3;20054:2;20050:12;20044:19;-1:-1:-1;;;;;20078:8:33;20075:32;20072:52;;;20120:1;20117;20110:12;20072:52;20157:55;20204:7;20193:8;20189:2;20185:17;20157:55;:::i;:::-;20151:3;20144:5;20140:15;20133:80;;20252:3;20248:2;20244:12;20238:19;-1:-1:-1;;;;;20272:8:33;20269:32;20266:52;;;20314:1;20311;20304:12;20266:52;20351:55;20398:7;20387:8;20383:2;20379:17;20351:55;:::i;:::-;20345:3;20334:15;;20327:80;-1:-1:-1;20338:5:33;18465:1972;-1:-1:-1;;;;18465:1972:33:o;20442:148::-;20530:4;20509:12;;;20523;;;20505:31;;20548:13;;20545:39;;;20564:18;;:::i;20595:490::-;20679:6;20687;20695;20748:2;20736:9;20727:7;20723:23;20719:32;20716:52;;;20764:1;20761;20754:12;20716:52;20809:16;;20894:2;20879:18;;20873:25;20809:16;;-1:-1:-1;20907:31:33;20873:25;20907:31;:::i;:::-;21009:2;20994:18;;20988:25;20957:7;;-1:-1:-1;21022:31:33;20988:25;21022:31;:::i;:::-;21072:7;21062:17;;;20595:490;;;;;:::o;21090:479::-;21292:2;21274:21;;;21331:2;21311:18;;;21304:30;21370:34;21365:2;21350:18;;21343:62;21441:34;21436:2;21421:18;;21414:62;-1:-1:-1;;;21507:3:33;21492:19;;21485:42;21559:3;21544:19;;21090:479::o;22007:335::-;22086:6;22139:2;22127:9;22118:7;22114:23;22110:32;22107:52;;;22155:1;22152;22145:12;22107:52;22188:9;22182:16;-1:-1:-1;;;;;22213:6:33;22210:30;22207:50;;;22253:1;22250;22243:12;22207:50;22276:60;22328:7;22319:6;22308:9;22304:22;22276:60;:::i;22347:226::-;22502:2;22491:9;22484:21;22465:4;22522:45;22563:2;22552:9;22548:18;22540:6;22522:45;:::i;22578:577::-;22676:6;22684;22692;22745:2;22733:9;22724:7;22720:23;22716:32;22713:52;;;22761:1;22758;22751:12;22713:52;22793:9;22787:16;22812:31;22837:5;22812:31;:::i;:::-;22933:2;22918:18;;22912:25;23007:2;22992:18;;22986:25;22862:5;;-1:-1:-1;22912:25:33;-1:-1:-1;;;;;;23023:30:33;;23020:50;;;23066:1;23063;23056:12;23020:50;23089:60;23141:7;23132:6;23121:9;23117:22;23089:60;:::i;24544:184::-;24614:6;24667:2;24655:9;24646:7;24642:23;24638:32;24635:52;;;24683:1;24680;24673:12;24635:52;-1:-1:-1;24706:16:33;;24544:184;-1:-1:-1;24544:184:33:o;25090:273::-;25275:6;25267;25262:3;25249:33;25231:3;25301:16;;25326:13;;;25301:16;25090:273;-1:-1:-1;25090:273:33:o;25368:301::-;25497:3;25535:6;25529:13;25581:6;25574:4;25566:6;25562:17;25557:3;25551:37;25643:1;25607:16;;25632:13;;;-1:-1:-1;25607:16:33;25368:301;-1:-1:-1;25368:301:33:o;25674:127::-;25735:10;25730:3;25726:20;25723:1;25716:31;25766:4;25763:1;25756:15;25790:4;25787:1;25780:15;25806:128;25873:9;;;25894:11;;;25891:37;;;25908:18;;:::i;26731:151::-;26821:4;26814:12;;;26800;;;26796:31;;26839:14;;26836:40;;;26856:18;;:::i;29083:355::-;29204:9;29215;29257:8;29245:10;29242:24;29239:44;;;29279:1;29276;29269:12;29239:44;29308:6;29298:8;29295:20;29292:40;;;29328:1;29325;29318:12;29292:40;-1:-1:-1;;29370:1:33;29366:18;;;29354:31;;29407:25;;;;;-1:-1:-1;29083:355:33:o;30738:245::-;30805:6;30858:2;30846:9;30837:7;30833:23;30829:32;30826:52;;;30874:1;30871;30864:12;30826:52;30906:9;30900:16;30925:28;30947:5;30925:28;:::i;30988:127::-;31049:10;31044:3;31040:20;31037:1;31030:31;31080:4;31077:1;31070:15;31104:4;31101:1;31094:15;31120:721;31414:2;31403:9;31396:21;31377:4;31440:61;31497:2;31486:9;31482:18;31474:6;31466;31440:61;:::i;:::-;31549:9;31541:6;31537:22;31532:2;31521:9;31517:18;31510:50;31577:61;31631:6;31623;31615;31577:61;:::i;:::-;31569:69;;;31668:2;31660:6;31657:14;31647:145;;31714:10;31709:3;31705:20;31702:1;31695:31;31749:4;31746:1;31739:15;31777:4;31774:1;31767:15;31647:145;31828:6;31823:2;31812:9;31808:18;31801:34;31120:721;;;;;;;;:::o;31846:456::-;31934:6;31942;31950;32003:2;31991:9;31982:7;31978:23;31974:32;31971:52;;;32019:1;32016;32009:12;31971:52;-1:-1:-1;;32064:16:33;;32170:2;32155:18;;32149:25;32266:2;32251:18;;;32245:25;32064:16;;32149:25;;-1:-1:-1;32245:25:33;31846:456;-1:-1:-1;31846:456:33:o;32307:342::-;32509:2;32491:21;;;32548:2;32528:18;;;32521:30;-1:-1:-1;;;32582:2:33;32567:18;;32560:48;32640:2;32625:18;;32307:342::o;34520:486::-;34722:2;34704:21;;;34761:2;34741:18;;;34734:30;34800:34;34795:2;34780:18;;34773:62;34871:34;34866:2;34851:18;;34844:62;-1:-1:-1;;;34937:3:33;34922:19;;34915:49;34996:3;34981:19;;34520:486::o;35503:487::-;35705:2;35687:21;;;35744:2;35724:18;;;35717:30;35783:34;35778:2;35763:18;;35756:62;35854:34;35849:2;35834:18;;35827:62;-1:-1:-1;;;35920:3:33;35905:19;;35898:50;35980:3;35965:19;;35503:487::o;35995:1173::-;36109:6;36117;36170:2;36158:9;36149:7;36145:23;36141:32;36138:52;;;36186:1;36183;36176:12;36138:52;36219:9;36213:16;-1:-1:-1;;;;;36244:6:33;36241:30;36238:50;;;36284:1;36281;36274:12;36238:50;36307:22;;36360:4;36352:13;;36348:27;-1:-1:-1;36338:55:33;;36389:1;36386;36379:12;36338:55;36422:2;36416:9;36445:63;36461:46;36500:6;36461:46;:::i;36445:63::-;36530:3;36554:6;36549:3;36542:19;36586:4;36581:3;36577:14;36570:21;;36643:4;36633:6;36630:1;36626:14;36622:2;36618:23;36614:34;36600:48;;36671:7;36663:6;36660:19;36657:39;;;36692:1;36689;36682:12;36657:39;36724:4;36720:2;36716:13;36738:308;36754:6;36749:3;36746:15;36738:308;;;36835:3;36829:10;-1:-1:-1;;;;;36858:11:33;36855:35;36852:55;;;36903:1;36900;36893:12;36852:55;36932:69;36993:7;36986:4;36972:11;36968:2;36964:20;36960:31;36932:69;:::i;:::-;36920:82;;-1:-1:-1;37031:4:33;37022:14;;;;36771;36738:308;;;-1:-1:-1;37132:4:33;37117:20;;;;37111:27;37065:5;;37111:27;;-1:-1:-1;;;;;;35995:1173:33:o;39367:331::-;39472:9;39483;39525:8;39513:10;39510:24;39507:44;;;39547:1;39544;39537:12;39507:44;39576:6;39566:8;39563:20;39560:40;;;39596:1;39593;39586:12;39560:40;-1:-1:-1;;39622:23:33;;;39667:25;;;;;-1:-1:-1;39367:331:33:o",
    "linkReferences": {
      "src/InputsExtractor.sol": {
        "InputsExtractor": [
          { "start": 1839, "length": 20 },
          { "start": 2003, "length": 20 },
          { "start": 2196, "length": 20 },
          { "start": 2557, "length": 20 },
          { "start": 2721, "length": 20 },
          { "start": 2859, "length": 20 },
          { "start": 3481, "length": 20 },
          { "start": 4861, "length": 20 },
          { "start": 6622, "length": 20 },
          { "start": 7225, "length": 20 },
          { "start": 8054, "length": 20 },
          { "start": 8596, "length": 20 }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "CERTIFICATE_REGISTRY_ID()": "41a0e2c2",
    "CIRCUIT_REGISTRY_ID()": "6c40d5d6",
    "SANCTIONS_REGISTRY_ID()": "652ba33d",
    "addVerifiers(bytes32[],address[])": "a6df2c01",
    "admin()": "f851a440",
    "enforceSanctionsRoot((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "653cfd81",
    "getBoundData((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "59545f45",
    "getDisclosedData((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool),bool)": "1e26a9dc",
    "isAgeAbove(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "37889655",
    "isAgeAboveOrEqual(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "54dbe4d1",
    "isAgeBelow(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "bf73c26c",
    "isAgeBelowOrEqual(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "aa1346ea",
    "isAgeBetween(uint8,uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "62067c82",
    "isAgeEqual(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "c0940ebd",
    "isBirthdateAfter(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "04951b86",
    "isBirthdateAfterOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "704876d6",
    "isBirthdateBefore(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "921076c7",
    "isBirthdateBeforeOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "deb7c059",
    "isBirthdateBetween(uint256,uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "c4560786",
    "isBirthdateEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "0b90581b",
    "isExpiryDateAfter(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "d3f6ffff",
    "isExpiryDateAfterOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "4c127428",
    "isExpiryDateBefore(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "a88f1cef",
    "isExpiryDateBeforeOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "e718bc32",
    "isExpiryDateBetween(uint256,uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "46bd0a16",
    "isExpiryDateEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "cfd9464a",
    "isIssuingCountryIn(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "ec46f774",
    "isIssuingCountryOut(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "3a86bd3d",
    "isNationalityIn(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "f87e19b1",
    "isNationalityOut(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "e420e354",
    "paused()": "5c975abb",
    "removeVerifiers(bytes32[])": "8d6937b8",
    "rootRegistry()": "b96b161c",
    "setPaused(bool)": "16c38b3c",
    "transferAdmin(address)": "75829def",
    "updateRootRegistry(address)": "18677f2a",
    "verifyProof((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": "d7bf616a",
    "verifyScopes(bytes32[],string,string)": "847755e3",
    "vkeyHashToVerifier(bytes32)": "8163f231"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rootRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"certificateRegistryRoot\",\"type\":\"bytes32\"}],\"name\":\"CertificateRegistryRootAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"certificateRegistryRoot\",\"type\":\"bytes32\"}],\"name\":\"CertificateRegistryRootRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_sanctionsTreesRoot\",\"type\":\"bytes32\"}],\"name\":\"SanctionsTreesRootUpdates\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"VerifierAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"}],\"name\":\"VerifierRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ZKPassportVerifierDeployed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CERTIFICATE_REGISTRY_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CIRCUIT_REGISTRY_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SANCTIONS_REGISTRY_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"vkeyHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"verifiers\",\"type\":\"address[]\"}],\"name\":\"addVerifiers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"enforceSanctionsRoot\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"getBoundData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"customData\",\"type\":\"string\"}],\"internalType\":\"struct BoundData\",\"name\":\"boundData\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isIDCard\",\"type\":\"bool\"}],\"name\":\"getDisclosedData\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"issuingCountry\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nationality\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"birthDate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"expiryDate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"}],\"internalType\":\"struct DisclosedData\",\"name\":\"disclosedData\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"minAge\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isAgeAbove\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"minAge\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isAgeAboveOrEqual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"maxAge\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isAgeBelow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"maxAge\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isAgeBelowOrEqual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"minAge\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"maxAge\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isAgeBetween\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"age\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isAgeEqual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isBirthdateAfter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isBirthdateAfterOrEqual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isBirthdateBefore\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isBirthdateBeforeOrEqual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isBirthdateBetween\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isBirthdateEqual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isExpiryDateAfter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isExpiryDateAfterOrEqual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isExpiryDateBefore\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isExpiryDateBeforeOrEqual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isExpiryDateBetween\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isExpiryDateEqual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"countryList\",\"type\":\"string[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isIssuingCountryIn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"countryList\",\"type\":\"string[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isIssuingCountryOut\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"countryList\",\"type\":\"string[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isNationalityIn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"countryList\",\"type\":\"string[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"isNationalityOut\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"vkeyHashes\",\"type\":\"bytes32[]\"}],\"name\":\"removeVerifiers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rootRegistry\",\"outputs\":[{\"internalType\":\"contract IRootRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rootRegistry\",\"type\":\"address\"}],\"name\":\"updateRootRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"vkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"committedInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"committedInputCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriodInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"devMode\",\"type\":\"bool\"}],\"internalType\":\"struct ProofVerificationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"uniqueIdentifier\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"scope\",\"type\":\"string\"}],\"name\":\"verifyScopes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"vkeyHashToVerifier\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor\"},\"enforceSanctionsRoot((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"params\":\"The proof verification parameters\"}},\"getBoundData((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"params\":\"The proof verification parameters\"},\"returns\":{\"boundData\":\"The data bound to the proof\"}},\"getDisclosedData((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool),bool)\":{\"params\":{\"isIDCard\":\"Whether the proof is an ID card\",\"params\":\"The proof verification parameters\"},\"returns\":{\"disclosedData\":\"The data disclosed by the proof\"}},\"isAgeAbove(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"minAge\":\"The age must be above this age\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the age is above the given age, false otherwise\"}},\"isAgeAboveOrEqual(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"minAge\":\"The age must be above or equal to this age\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the age is above or equal to the given age, false otherwise\"}},\"isAgeBelow(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"maxAge\":\"The age must be below this age\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the age is below the given age, false otherwise\"}},\"isAgeBelowOrEqual(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"maxAge\":\"The age must be below or equal to this age\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the age is below or equal to the given age, false otherwise\"}},\"isAgeBetween(uint8,uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"maxAge\":\"The age must be less than or equal to this age\",\"minAge\":\"The age must be greater than or equal to this age\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the age is in the given range, false otherwise\"}},\"isAgeEqual(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"age\":\"The age must be equal to this age\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the age is equal to the given age, false otherwise\"}},\"isBirthdateAfter(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"minDate\":\"The birthdate must be after this date\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the birthdate is after the given date, false otherwise\"}},\"isBirthdateAfterOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"minDate\":\"The birthdate must be after or equal to this date\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the birthdate is after or equal to the given date, false otherwise\"}},\"isBirthdateBefore(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"maxDate\":\"The birthdate must be before this date\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the birthdate is before the given date, false otherwise\"}},\"isBirthdateBeforeOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"maxDate\":\"The birthdate must be before or equal to this date\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the birthdate is before or equal to the given date, false otherwise\"}},\"isBirthdateBetween(uint256,uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"maxDate\":\"The birthdate must be before or equal to this date\",\"minDate\":\"The birthdate must be after or equal to this date\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the birthdate is between the given dates, false otherwise\"}},\"isBirthdateEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"date\":\"The birthdate must be equal to this date\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the birthdate is equal to the given date, false otherwise\"}},\"isExpiryDateAfter(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"minDate\":\"The expiry date must be after this date\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the expiry date is after the given date, false otherwise\"}},\"isExpiryDateAfterOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"minDate\":\"The expiry date must be after or equal to this date\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the expiry date is after or equal to the given date, false otherwise\"}},\"isExpiryDateBefore(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"maxDate\":\"The expiry date must be before this date\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the expiry date is before the given date, false otherwise\"}},\"isExpiryDateBeforeOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"maxDate\":\"The expiry date must be before or equal to this date\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the expiry date is before or equal to the given date, false otherwise\"}},\"isExpiryDateBetween(uint256,uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"maxDate\":\"The expiry date must be before or equal to this date\",\"minDate\":\"The expiry date must be after or equal to this date\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the expiry date is between the given dates, false otherwise\"}},\"isExpiryDateEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"date\":\"The expiry date must be equal to this date\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the expiry date is equal to the given date, false otherwise\"}},\"isIssuingCountryIn(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"countryList\":\"The list of countries (needs to match exactly the list of countries in the proof)\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the issuing country is in the list of countries, false otherwise\"}},\"isIssuingCountryOut(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"countryList\":\"The list of countries (needs to match exactly the list of countries in the proof) Note: The list of countries must be sorted in alphabetical order\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the issuing country is not in the list of countries, false otherwise\"}},\"isNationalityIn(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"countryList\":\"The list of countries (needs to match exactly the list of countries in the proof)\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the nationality is in the list of countries, false otherwise\"}},\"isNationalityOut(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"countryList\":\"The list of countries (needs to match exactly the list of countries in the proof) Note: The list of countries must be sorted in alphabetical order\",\"params\":\"The proof verification parameters\"},\"returns\":{\"_0\":\"True if the nationality is not in the list of countries, false otherwise\"}},\"verifyProof((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"params\":{\"params\":\"The proof verification parameters\"},\"returns\":{\"isValid\":\"True if the proof is valid, false otherwise\",\"uniqueIdentifier\":\"The unique identifier associated to the identity document that generated the proof\"}},\"verifyScopes(bytes32[],string,string)\":{\"params\":{\"domain\":\"The domain to check against\",\"publicInputs\":\"The public inputs of the proof\",\"scope\":\"The scope to check against\"},\"returns\":{\"_0\":\"True if the proof was generated for the given domain and scope, false otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"enforceSanctionsRoot((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Enforces that the proof checks against the expected sanction list(s)\"},\"getBoundData((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Gets the data bound to the proof\"},\"getDisclosedData((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool),bool)\":{\"notice\":\"Gets the data disclosed by the proof\"},\"isAgeAbove(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the age is above the given age\"},\"isAgeAboveOrEqual(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the age is above or equal to the given age\"},\"isAgeBelow(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the age is below the given age\"},\"isAgeBelowOrEqual(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the age is below or equal to the given age\"},\"isAgeBetween(uint8,uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the age is in the given range\"},\"isAgeEqual(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the age is equal to the given age\"},\"isBirthdateAfter(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the birthdate is after the given date\"},\"isBirthdateAfterOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the birthdate is after or equal to the given date\"},\"isBirthdateBefore(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the birthdate is before the given date\"},\"isBirthdateBeforeOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the birthdate is before or equal to the given date\"},\"isBirthdateBetween(uint256,uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the birthdate is between the given dates\"},\"isBirthdateEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the birthdate is equal to the given date\"},\"isExpiryDateAfter(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the expiry date is after the given date\"},\"isExpiryDateAfterOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the expiry date is after or equal to the given date\"},\"isExpiryDateBefore(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the expiry date is before the given date\"},\"isExpiryDateBeforeOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the expiry date is before or equal to the given date\"},\"isExpiryDateBetween(uint256,uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the expiry date is between the given dates\"},\"isExpiryDateEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the expiry date is equal to the given date\"},\"isIssuingCountryIn(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the issuing country is in the list of countries\"},\"isIssuingCountryOut(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the issuing country is not in the list of countries\"},\"isNationalityIn(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the nationality is in the list of countries\"},\"isNationalityOut(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Checks if the nationality is not in the list of countries\"},\"verifyProof((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))\":{\"notice\":\"Verifies a proof from ZKPassport\"},\"verifyScopes(bytes32[],string,string)\":{\"notice\":\"Verifies that the proof was generated for the given domain and scope\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ZKPassportVerifier.sol\":\"ZKPassportVerifier\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/Constants.sol\":{\"keccak256\":\"0xb1105acee68946ef452b55289a556a42289c3e1e849482d26cb8af4e2447ebdd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4639a621a472a215c320dd3f2d22e08d57028550df503bbffbd7330b57ba9ed8\",\"dweb:/ipfs/QmfMoxNwnJMBNzHxUByv1eqtaktX1EGFqU2VJ4L1pYidJq\"]},\"src/DateUtils.sol\":{\"keccak256\":\"0xc04aef2f5732f8c3b28077a0af19e2fbbdec2f9178f3800563bf64ccdecefc77\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bcc2610f3bdd3411fc040d39efe9e68f826b48986b2df7987f3adb6a1467c833\",\"dweb:/ipfs/Qmc7uyW8Y7ekaKEdjd3kU9e1eDcCiAqsujGc5ZavuzGx4w\"]},\"src/IRootRegistry.sol\":{\"keccak256\":\"0xa9955e80821ca9ccbdf7d05a8ce9a3e237b4771e1f6e09190ed1c803a5e1e516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd9fc9fbd7057a6bcc16a682e52be9ebd012954898626a11f0a0e8788644789d\",\"dweb:/ipfs/QmZYpMRHdv4gMCNXCQtGQu8XqRVtNR9Kgkzh7u1YMpvrEB\"]},\"src/InputsExtractor.sol\":{\"keccak256\":\"0x55af333a1ed7cd5a1299f1b0778db0fc2a15f68903e9ae6a6034d24f13da03e7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://10ccdb51863cfd11f222ecb3111f0f291aae3a19fdbef6d90233d08f02eab1d5\",\"dweb:/ipfs/QmebPTX4Dbc5LkhG57YuTjEZgEvCk51ut3ZERZoqeGemsB\"]},\"src/StringUtils.sol\":{\"keccak256\":\"0x0174454c28003f489bcdf636c93ccb512d80f3dbdca7485e11b51cf2c8ebfff1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://92ea71064b8199c9a05cbe279cf42adaaa7b29604d960a84754d3d997b1c2342\",\"dweb:/ipfs/QmcsrqRJ2YZABCZHzS782RqKmWEegSK1LCmTTjJ94gdh5q\"]},\"src/Types.sol\":{\"keccak256\":\"0x6cd3120512911d8319b011016e19204c3f2d72b75efc2663cbde807571a5a7f0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ec0c51990097f62145282a34f553465843007d0c86e742652c5ea2c7878e78be\",\"dweb:/ipfs/QmVUFfqiYGZuwbj5AA4smnSn5KpDyeKpw9iFmRzuK18dVo\"]},\"src/ZKPassportVerifier.sol\":{\"keccak256\":\"0x692154ad13d61bc9a232b33396888dcbe6f0ff46bbcd261e00ffa49c4afc8728\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d1477d1851973999abda47bbb20d4f3120bc50b0ad9a3c5a041b768a2c9d47c3\",\"dweb:/ipfs/QmZqefNqexmbFbQ7HUJUDwAAMjcDUobNUyhj1tDYj2HU9S\"]},\"src/ultra-honk-verifiers/OuterCount4.sol\":{\"keccak256\":\"0x9f343e672cd22bb67bda44f4ed5ce7318769dfd65270f52eadf70c12a2377aab\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://69a1177da0c5a7148676bef2a5e5c58840a66b2e142d2a0d331dca01dd0109ad\",\"dweb:/ipfs/QmQ6iVmrCNEG6XE3ejP4dgBiw3XhMaGm1hW61z4rj7zsiF\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.29+commit.ab55807c" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [{ "internalType": "address", "name": "_rootRegistry", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "oldAdmin", "type": "address", "indexed": true },
            { "internalType": "address", "name": "newAdmin", "type": "address", "indexed": true }
          ],
          "type": "event",
          "name": "AdminUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "certificateRegistryRoot",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CertificateRegistryRootAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "certificateRegistryRoot",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CertificateRegistryRootRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "bool", "name": "paused", "type": "bool", "indexed": false }
          ],
          "type": "event",
          "name": "PausedStatusChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_sanctionsTreesRoot",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SanctionsTreesRootUpdates",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32", "indexed": true },
            { "internalType": "address", "name": "verifier", "type": "address", "indexed": true }
          ],
          "type": "event",
          "name": "VerifierAdded",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32", "indexed": true }
          ],
          "type": "event",
          "name": "VerifierRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "admin", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "timestamp", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "ZKPassportVerifierDeployed",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CERTIFICATE_REGISTRY_ID",
          "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CIRCUIT_REGISTRY_ID",
          "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SANCTIONS_REGISTRY_ID",
          "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }]
        },
        {
          "inputs": [
            { "internalType": "bytes32[]", "name": "vkeyHashes", "type": "bytes32[]" },
            { "internalType": "address[]", "name": "verifiers", "type": "address[]" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addVerifiers"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "enforceSanctionsRoot"
        },
        {
          "inputs": [
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getBoundData",
          "outputs": [
            {
              "internalType": "struct BoundData",
              "name": "boundData",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "senderAddress", "type": "address" },
                { "internalType": "uint256", "name": "chainId", "type": "uint256" },
                { "internalType": "string", "name": "customData", "type": "string" }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            },
            { "internalType": "bool", "name": "isIDCard", "type": "bool" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getDisclosedData",
          "outputs": [
            {
              "internalType": "struct DisclosedData",
              "name": "disclosedData",
              "type": "tuple",
              "components": [
                { "internalType": "string", "name": "name", "type": "string" },
                { "internalType": "string", "name": "issuingCountry", "type": "string" },
                { "internalType": "string", "name": "nationality", "type": "string" },
                { "internalType": "string", "name": "gender", "type": "string" },
                { "internalType": "string", "name": "birthDate", "type": "string" },
                { "internalType": "string", "name": "expiryDate", "type": "string" },
                { "internalType": "string", "name": "documentNumber", "type": "string" },
                { "internalType": "string", "name": "documentType", "type": "string" }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint8", "name": "minAge", "type": "uint8" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAgeAbove",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint8", "name": "minAge", "type": "uint8" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAgeAboveOrEqual",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint8", "name": "maxAge", "type": "uint8" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAgeBelow",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint8", "name": "maxAge", "type": "uint8" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAgeBelowOrEqual",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint8", "name": "minAge", "type": "uint8" },
            { "internalType": "uint8", "name": "maxAge", "type": "uint8" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAgeBetween",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint8", "name": "age", "type": "uint8" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAgeEqual",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "minDate", "type": "uint256" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBirthdateAfter",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "minDate", "type": "uint256" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBirthdateAfterOrEqual",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "maxDate", "type": "uint256" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBirthdateBefore",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "maxDate", "type": "uint256" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBirthdateBeforeOrEqual",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "minDate", "type": "uint256" },
            { "internalType": "uint256", "name": "maxDate", "type": "uint256" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBirthdateBetween",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "date", "type": "uint256" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBirthdateEqual",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "minDate", "type": "uint256" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isExpiryDateAfter",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "minDate", "type": "uint256" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isExpiryDateAfterOrEqual",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "maxDate", "type": "uint256" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isExpiryDateBefore",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "maxDate", "type": "uint256" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isExpiryDateBeforeOrEqual",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "minDate", "type": "uint256" },
            { "internalType": "uint256", "name": "maxDate", "type": "uint256" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isExpiryDateBetween",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "date", "type": "uint256" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isExpiryDateEqual",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "string[]", "name": "countryList", "type": "string[]" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "isIssuingCountryIn",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "string[]", "name": "countryList", "type": "string[]" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "isIssuingCountryOut",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "string[]", "name": "countryList", "type": "string[]" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "isNationalityIn",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "string[]", "name": "countryList", "type": "string[]" },
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "isNationalityOut",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "bytes32[]", "name": "vkeyHashes", "type": "bytes32[]" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeVerifiers"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rootRegistry",
          "outputs": [{ "internalType": "contract IRootRegistry", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "bool", "name": "_paused", "type": "bool" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPaused"
        },
        {
          "inputs": [{ "internalType": "address", "name": "newAdmin", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAdmin"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_rootRegistry", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateRootRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "struct ProofVerificationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "vkeyHash", "type": "bytes32" },
                { "internalType": "bytes", "name": "proof", "type": "bytes" },
                { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
                { "internalType": "bytes", "name": "committedInputs", "type": "bytes" },
                {
                  "internalType": "uint256[]",
                  "name": "committedInputCounts",
                  "type": "uint256[]"
                },
                { "internalType": "uint256", "name": "validityPeriodInSeconds", "type": "uint256" },
                { "internalType": "string", "name": "domain", "type": "string" },
                { "internalType": "string", "name": "scope", "type": "string" },
                { "internalType": "bool", "name": "devMode", "type": "bool" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyProof",
          "outputs": [
            { "internalType": "bool", "name": "isValid", "type": "bool" },
            { "internalType": "bytes32", "name": "uniqueIdentifier", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32[]", "name": "publicInputs", "type": "bytes32[]" },
            { "internalType": "string", "name": "domain", "type": "string" },
            { "internalType": "string", "name": "scope", "type": "string" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "verifyScopes",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function",
          "name": "vkeyHashToVerifier",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": { "details": "Constructor" },
          "enforceSanctionsRoot((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": { "params": "The proof verification parameters" }
          },
          "getBoundData((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": { "params": "The proof verification parameters" },
            "returns": { "boundData": "The data bound to the proof" }
          },
          "getDisclosedData((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool),bool)": {
            "params": {
              "isIDCard": "Whether the proof is an ID card",
              "params": "The proof verification parameters"
            },
            "returns": { "disclosedData": "The data disclosed by the proof" }
          },
          "isAgeAbove(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "minAge": "The age must be above this age",
              "params": "The proof verification parameters"
            },
            "returns": { "_0": "True if the age is above the given age, false otherwise" }
          },
          "isAgeAboveOrEqual(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "minAge": "The age must be above or equal to this age",
              "params": "The proof verification parameters"
            },
            "returns": {
              "_0": "True if the age is above or equal to the given age, false otherwise"
            }
          },
          "isAgeBelow(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "maxAge": "The age must be below this age",
              "params": "The proof verification parameters"
            },
            "returns": { "_0": "True if the age is below the given age, false otherwise" }
          },
          "isAgeBelowOrEqual(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "maxAge": "The age must be below or equal to this age",
              "params": "The proof verification parameters"
            },
            "returns": {
              "_0": "True if the age is below or equal to the given age, false otherwise"
            }
          },
          "isAgeBetween(uint8,uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "maxAge": "The age must be less than or equal to this age",
              "minAge": "The age must be greater than or equal to this age",
              "params": "The proof verification parameters"
            },
            "returns": { "_0": "True if the age is in the given range, false otherwise" }
          },
          "isAgeEqual(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "age": "The age must be equal to this age",
              "params": "The proof verification parameters"
            },
            "returns": { "_0": "True if the age is equal to the given age, false otherwise" }
          },
          "isBirthdateAfter(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "minDate": "The birthdate must be after this date",
              "params": "The proof verification parameters"
            },
            "returns": { "_0": "True if the birthdate is after the given date, false otherwise" }
          },
          "isBirthdateAfterOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "minDate": "The birthdate must be after or equal to this date",
              "params": "The proof verification parameters"
            },
            "returns": {
              "_0": "True if the birthdate is after or equal to the given date, false otherwise"
            }
          },
          "isBirthdateBefore(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "maxDate": "The birthdate must be before this date",
              "params": "The proof verification parameters"
            },
            "returns": { "_0": "True if the birthdate is before the given date, false otherwise" }
          },
          "isBirthdateBeforeOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "maxDate": "The birthdate must be before or equal to this date",
              "params": "The proof verification parameters"
            },
            "returns": {
              "_0": "True if the birthdate is before or equal to the given date, false otherwise"
            }
          },
          "isBirthdateBetween(uint256,uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "maxDate": "The birthdate must be before or equal to this date",
              "minDate": "The birthdate must be after or equal to this date",
              "params": "The proof verification parameters"
            },
            "returns": { "_0": "True if the birthdate is between the given dates, false otherwise" }
          },
          "isBirthdateEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "date": "The birthdate must be equal to this date",
              "params": "The proof verification parameters"
            },
            "returns": { "_0": "True if the birthdate is equal to the given date, false otherwise" }
          },
          "isExpiryDateAfter(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "minDate": "The expiry date must be after this date",
              "params": "The proof verification parameters"
            },
            "returns": { "_0": "True if the expiry date is after the given date, false otherwise" }
          },
          "isExpiryDateAfterOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "minDate": "The expiry date must be after or equal to this date",
              "params": "The proof verification parameters"
            },
            "returns": {
              "_0": "True if the expiry date is after or equal to the given date, false otherwise"
            }
          },
          "isExpiryDateBefore(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "maxDate": "The expiry date must be before this date",
              "params": "The proof verification parameters"
            },
            "returns": { "_0": "True if the expiry date is before the given date, false otherwise" }
          },
          "isExpiryDateBeforeOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "maxDate": "The expiry date must be before or equal to this date",
              "params": "The proof verification parameters"
            },
            "returns": {
              "_0": "True if the expiry date is before or equal to the given date, false otherwise"
            }
          },
          "isExpiryDateBetween(uint256,uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "maxDate": "The expiry date must be before or equal to this date",
              "minDate": "The expiry date must be after or equal to this date",
              "params": "The proof verification parameters"
            },
            "returns": {
              "_0": "True if the expiry date is between the given dates, false otherwise"
            }
          },
          "isExpiryDateEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "date": "The expiry date must be equal to this date",
              "params": "The proof verification parameters"
            },
            "returns": {
              "_0": "True if the expiry date is equal to the given date, false otherwise"
            }
          },
          "isIssuingCountryIn(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "countryList": "The list of countries (needs to match exactly the list of countries in the proof)",
              "params": "The proof verification parameters"
            },
            "returns": {
              "_0": "True if the issuing country is in the list of countries, false otherwise"
            }
          },
          "isIssuingCountryOut(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "countryList": "The list of countries (needs to match exactly the list of countries in the proof) Note: The list of countries must be sorted in alphabetical order",
              "params": "The proof verification parameters"
            },
            "returns": {
              "_0": "True if the issuing country is not in the list of countries, false otherwise"
            }
          },
          "isNationalityIn(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "countryList": "The list of countries (needs to match exactly the list of countries in the proof)",
              "params": "The proof verification parameters"
            },
            "returns": {
              "_0": "True if the nationality is in the list of countries, false otherwise"
            }
          },
          "isNationalityOut(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": {
              "countryList": "The list of countries (needs to match exactly the list of countries in the proof) Note: The list of countries must be sorted in alphabetical order",
              "params": "The proof verification parameters"
            },
            "returns": {
              "_0": "True if the nationality is not in the list of countries, false otherwise"
            }
          },
          "verifyProof((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "params": { "params": "The proof verification parameters" },
            "returns": {
              "isValid": "True if the proof is valid, false otherwise",
              "uniqueIdentifier": "The unique identifier associated to the identity document that generated the proof"
            }
          },
          "verifyScopes(bytes32[],string,string)": {
            "params": {
              "domain": "The domain to check against",
              "publicInputs": "The public inputs of the proof",
              "scope": "The scope to check against"
            },
            "returns": {
              "_0": "True if the proof was generated for the given domain and scope, false otherwise"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "enforceSanctionsRoot((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Enforces that the proof checks against the expected sanction list(s)"
          },
          "getBoundData((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Gets the data bound to the proof"
          },
          "getDisclosedData((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool),bool)": {
            "notice": "Gets the data disclosed by the proof"
          },
          "isAgeAbove(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the age is above the given age"
          },
          "isAgeAboveOrEqual(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the age is above or equal to the given age"
          },
          "isAgeBelow(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the age is below the given age"
          },
          "isAgeBelowOrEqual(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the age is below or equal to the given age"
          },
          "isAgeBetween(uint8,uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the age is in the given range"
          },
          "isAgeEqual(uint8,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the age is equal to the given age"
          },
          "isBirthdateAfter(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the birthdate is after the given date"
          },
          "isBirthdateAfterOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the birthdate is after or equal to the given date"
          },
          "isBirthdateBefore(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the birthdate is before the given date"
          },
          "isBirthdateBeforeOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the birthdate is before or equal to the given date"
          },
          "isBirthdateBetween(uint256,uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the birthdate is between the given dates"
          },
          "isBirthdateEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the birthdate is equal to the given date"
          },
          "isExpiryDateAfter(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the expiry date is after the given date"
          },
          "isExpiryDateAfterOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the expiry date is after or equal to the given date"
          },
          "isExpiryDateBefore(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the expiry date is before the given date"
          },
          "isExpiryDateBeforeOrEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the expiry date is before or equal to the given date"
          },
          "isExpiryDateBetween(uint256,uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the expiry date is between the given dates"
          },
          "isExpiryDateEqual(uint256,(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the expiry date is equal to the given date"
          },
          "isIssuingCountryIn(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the issuing country is in the list of countries"
          },
          "isIssuingCountryOut(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the issuing country is not in the list of countries"
          },
          "isNationalityIn(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the nationality is in the list of countries"
          },
          "isNationalityOut(string[],(bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Checks if the nationality is not in the list of countries"
          },
          "verifyProof((bytes32,bytes,bytes32[],bytes,uint256[],uint256,string,string,bool))": {
            "notice": "Verifies a proof from ZKPassport"
          },
          "verifyScopes(bytes32[],string,string)": {
            "notice": "Verifies that the proof was generated for the given domain and scope"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": ["forge-std/=lib/forge-std/src/"],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/ZKPassportVerifier.sol": "ZKPassportVerifier" },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "src/Constants.sol": {
        "keccak256": "0xb1105acee68946ef452b55289a556a42289c3e1e849482d26cb8af4e2447ebdd",
        "urls": [
          "bzz-raw://4639a621a472a215c320dd3f2d22e08d57028550df503bbffbd7330b57ba9ed8",
          "dweb:/ipfs/QmfMoxNwnJMBNzHxUByv1eqtaktX1EGFqU2VJ4L1pYidJq"
        ],
        "license": "Apache-2.0"
      },
      "src/DateUtils.sol": {
        "keccak256": "0xc04aef2f5732f8c3b28077a0af19e2fbbdec2f9178f3800563bf64ccdecefc77",
        "urls": [
          "bzz-raw://bcc2610f3bdd3411fc040d39efe9e68f826b48986b2df7987f3adb6a1467c833",
          "dweb:/ipfs/Qmc7uyW8Y7ekaKEdjd3kU9e1eDcCiAqsujGc5ZavuzGx4w"
        ],
        "license": "Apache-2.0"
      },
      "src/IRootRegistry.sol": {
        "keccak256": "0xa9955e80821ca9ccbdf7d05a8ce9a3e237b4771e1f6e09190ed1c803a5e1e516",
        "urls": [
          "bzz-raw://fd9fc9fbd7057a6bcc16a682e52be9ebd012954898626a11f0a0e8788644789d",
          "dweb:/ipfs/QmZYpMRHdv4gMCNXCQtGQu8XqRVtNR9Kgkzh7u1YMpvrEB"
        ],
        "license": "MIT"
      },
      "src/InputsExtractor.sol": {
        "keccak256": "0x55af333a1ed7cd5a1299f1b0778db0fc2a15f68903e9ae6a6034d24f13da03e7",
        "urls": [
          "bzz-raw://10ccdb51863cfd11f222ecb3111f0f291aae3a19fdbef6d90233d08f02eab1d5",
          "dweb:/ipfs/QmebPTX4Dbc5LkhG57YuTjEZgEvCk51ut3ZERZoqeGemsB"
        ],
        "license": "Apache-2.0"
      },
      "src/StringUtils.sol": {
        "keccak256": "0x0174454c28003f489bcdf636c93ccb512d80f3dbdca7485e11b51cf2c8ebfff1",
        "urls": [
          "bzz-raw://92ea71064b8199c9a05cbe279cf42adaaa7b29604d960a84754d3d997b1c2342",
          "dweb:/ipfs/QmcsrqRJ2YZABCZHzS782RqKmWEegSK1LCmTTjJ94gdh5q"
        ],
        "license": "Apache-2.0"
      },
      "src/Types.sol": {
        "keccak256": "0x6cd3120512911d8319b011016e19204c3f2d72b75efc2663cbde807571a5a7f0",
        "urls": [
          "bzz-raw://ec0c51990097f62145282a34f553465843007d0c86e742652c5ea2c7878e78be",
          "dweb:/ipfs/QmVUFfqiYGZuwbj5AA4smnSn5KpDyeKpw9iFmRzuK18dVo"
        ],
        "license": "Apache-2.0"
      },
      "src/ZKPassportVerifier.sol": {
        "keccak256": "0x692154ad13d61bc9a232b33396888dcbe6f0ff46bbcd261e00ffa49c4afc8728",
        "urls": [
          "bzz-raw://d1477d1851973999abda47bbb20d4f3120bc50b0ad9a3c5a041b768a2c9d47c3",
          "dweb:/ipfs/QmZqefNqexmbFbQ7HUJUDwAAMjcDUobNUyhj1tDYj2HU9S"
        ],
        "license": "Apache-2.0"
      },
      "src/ultra-honk-verifiers/OuterCount4.sol": {
        "keccak256": "0x9f343e672cd22bb67bda44f4ed5ce7318769dfd65270f52eadf70c12a2377aab",
        "urls": [
          "bzz-raw://69a1177da0c5a7148676bef2a5e5c58840a66b2e142d2a0d331dca01dd0109ad",
          "dweb:/ipfs/QmQ6iVmrCNEG6XE3ejP4dgBiw3XhMaGm1hW61z4rj7zsiF"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "id": 26
}
